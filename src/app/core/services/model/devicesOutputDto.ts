/**
 * TWMS REST API
 * TWMS REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { DeviceStatus } from './deviceStatus';
import { DeviceStatusSimple } from './deviceStatusSimple';
import { DeviceTypeName } from './deviceTypeName';
import { DeviceUpdateStatusInternal } from './deviceUpdateStatusInternal';
import { Port } from './port';

/**
 * Devices data transfer object for frontend representation
 */
export interface DevicesOutputDto { 
    /**
     * UUID of the device
     */
    uuid?: string;
    /**
     * Name of the device
     */
    name?: string;
    /**
     * Vendor ID  of the device
     */
    vendorId?: number;
    /**
     * Product Code of the device
     */
    productCode?: number;
    /**
     * Revision Number of the device
     */
    revisionNumber?: number;
    /**
     * Serial Number of the device
     */
    serialNumber?: number;
    /**
     * Identification Parameter of the device
     */
    identificationParameter?: string;
    /**
     * Remark of the device
     */
    remark?: string;
    /**
     * CliqueName of the device
     */
    cliqueName?: string;
    /**
     * Last Maintenance Timestamp of the device
     */
    lastMaintenanceTimestamp?: Date;
    /**
     * Maintenance Interval of the device
     */
    maintenanceInterval?: string;
    /**
     * Ancestor Device UUID of the device
     */
    ancestorDeviceUUID?: string;
    /**
     * Ancestor Device Ports of the device
     */
    ancestorDevicePorts?: Array<Port>;
    /**
     * CreatedBy User UUID
     */
    createdByUUID?: string;
    /**
     * Device point of device
     */
    devicePointUUID?: string;
    deviceTypeName?: DeviceTypeName;
    /**
     * Managed By User UUID
     */
    managedByUserUUID?: string;
    deviceStatus?: DeviceStatus;
    deviceStatusSimple?: DeviceStatusSimple;
    /**
     * Pre Selected NodeId
     */
    preSelectedNodeId?: number;
    /**
     * List of unlinked Ports
     */
    availablePorts?: Array<Port>;
    /**
     * count of unlinked Ports
     */
    availablePortCount?: number;
    /**
     * Controller Point UUID of device
     */
    controllerPointUUID?: string;
    deviceUpdateStatus?: DeviceUpdateStatusInternal;
}