/**
 * TWMS REST API
 * TWMS REST API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

export type DeviceStatus = 'Idle' | 'WaterRunning' | 'ThermalDisinfection' | 'HygieneCleansingCold' | 'HygieneCleansingWarm' | 'UseLock' | 'WarmUp' | 'DiagnoseRunning' | 'BasicMode' | 'DefaultMode' | 'ManualMode' | 'ThermalDisinfectionResultFail' | 'ThermalDisinfectionResultOk' | 'KeySwitchOn' | 'KeySwitchOff' | 'UFCOK' | 'UFCError' | 'UFCFault' | 'ErrorUnlinkedSensor' | 'Automatic' | 'Maintenance' | 'ThermalDisinfectionClosed' | 'ThermalDisinfectionOpen' | 'Remote' | 'Unlinked' | 'ErrorBackendRemote' | 'Unknown' | 'ErrorBackend' | 'ErrorDevice';

export const DeviceStatus = {
    Idle: 'Idle' as DeviceStatus,
    WaterRunning: 'WaterRunning' as DeviceStatus,
    ThermalDisinfection: 'ThermalDisinfection' as DeviceStatus,
    HygieneCleansingCold: 'HygieneCleansingCold' as DeviceStatus,
    HygieneCleansingWarm: 'HygieneCleansingWarm' as DeviceStatus,
    UseLock: 'UseLock' as DeviceStatus,
    WarmUp: 'WarmUp' as DeviceStatus,
    DiagnoseRunning: 'DiagnoseRunning' as DeviceStatus,
    BasicMode: 'BasicMode' as DeviceStatus,
    DefaultMode: 'DefaultMode' as DeviceStatus,
    ManualMode: 'ManualMode' as DeviceStatus,
    ThermalDisinfectionResultFail: 'ThermalDisinfectionResultFail' as DeviceStatus,
    ThermalDisinfectionResultOk: 'ThermalDisinfectionResultOk' as DeviceStatus,
    KeySwitchOn: 'KeySwitchOn' as DeviceStatus,
    KeySwitchOff: 'KeySwitchOff' as DeviceStatus,
    UFCOK: 'UFCOK' as DeviceStatus,
    UFCError: 'UFCError' as DeviceStatus,
    UFCFault: 'UFCFault' as DeviceStatus,
    ErrorUnlinkedSensor: 'ErrorUnlinkedSensor' as DeviceStatus,
    Automatic: 'Automatic' as DeviceStatus,
    Maintenance: 'Maintenance' as DeviceStatus,
    ThermalDisinfectionClosed: 'ThermalDisinfectionClosed' as DeviceStatus,
    ThermalDisinfectionOpen: 'ThermalDisinfectionOpen' as DeviceStatus,
    Remote: 'Remote' as DeviceStatus,
    Unlinked: 'Unlinked' as DeviceStatus,
    ErrorBackendRemote: 'ErrorBackendRemote' as DeviceStatus,
    Unknown: 'Unknown' as DeviceStatus,
    ErrorBackend: 'ErrorBackend' as DeviceStatus,
    ErrorDevice: 'ErrorDevice' as DeviceStatus
};