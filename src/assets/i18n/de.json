{
  "ACTIVATION": {
    "ACTIVATE": "Aktivieren",
    "ACTIVATION_ERROR_MESSAGE": "Die Aktivierungs-Datei konnte nicht auf den Controller übertragen werden.",
    "ACTIVATION_FILE": "Bitte Aktivierungsdatei auswählen.",
    "ACTIVATION_UNKNOWN": "Der Aktivierungsstatus des Controllers konnte nicht abgefragt werden.",
    "APPLICATION_FILE": "Bitte Anwendungsdatei auswählen.",
    "CANNOT_READ_CONTROLLER_SERIAL_NUMBER": "Die Controller-Seriennummer konnte nicht gelesen werden.",
    "CONTROLLER_UPDATING": "Software-Update wird durchgeführt…",
    "DECRYPTING_UPDATE_FILE_FAILED": "Die Update-Datei konnte nicht entschlüsselt werden.",
    "INVALID_ACTIVATION_CODE": "Die gewählte Aktivierungs-Datei ist ungültig.",
    "INVALID_CERTIFICATE": "Das Zertifikat der Update-Datei ist ungültig.",
    "PRODUCT_ACTIVATION": "Produkt-Aktivierung",
    "PRODUCT_ID_NOT_MATCHING": "Die Update-Datei passt nicht zur Controller-Hardware.",
    "RAUC_INFO_FAILED": "Die Update-Datei ist defekt. (RAUC-Info nicht lesbar)",
    "SEARCH": "Durchsuchen…",
    "SOFTWARE_UPDATE": "Software-Aktualisierung",
    "UNABLE_TO_GET_ISSUER_CERTIFICATE": "Das Zertifikat der Update-Datei ist defekt.",
    "UNABLE_TO_GET_LOCAL_ISSUER_CERTIFICATE": "Das Zertifikat der Update-Datei ist defekt.",
    "UPDATE": "Aktualisieren",
    "UPDATE_ALLREADY_INSTALLED": "Das Update wurde bereits installiert.",
    "UPDATE_ERROR_MESSAGE": "Die Update-Datei konnte nicht auf den Controller übertragen werden.",
    "UPDATE_FAILED": "Das Software-Update ist fehlgeschlagen.",
    "UPDATE_FILE_PRODUCT_ID_WRONG_FORMAT": "Die Update-Datei ist defekt. (Produkt-ID nicht in erwartetem Format)",
    "UPDATE_OLDER_THAN_CURRENT": "Die momentane Software ist neuer als die Update-Datei.",
    "UPLOAD_FILE_FAILED": "Die Update-Datei konnte nicht hochgeladen werden.",
    "UPLOAD_MESSAGE": "Software-Update wird übertragen…"
  },
  "API": {
    "DEVICE_PARAMETERS": {
      "FlowSensorDT": "Zeit Grenzwertüberschreitung",
      "FlowSensorINC": "Zeitinkrement",
      "FlowSensorN": "Zähler",
      "FlowSensorNR": "Nennweite",
      "FlowSensorPMAX": "Durchfluss-Grenzwert max",
      "FlowSensorPMIN": "Durchfluss-Grenzwert min",
      "FlowSensorQ": "Durchfluss",
      "FlowSensorSV": "Sensor-Variante",
      "HyPlusFlowSensor2": "Durchfluss-Sensor 1",
      "HyPlusTemperatur1": "Temperatur-Sensor 1",
      "HyPlusTemperatur2": "Temperatur-Sensor 2",
      "PressureSensorP": "Druckwert",
      "PressureSensorPDT": "Zeit Grenzwertüberschreitung",
      "PressureSensorPMAX": "Druck Grenzwert max",
      "PressureSensorPMIN": "Druck Grenzwert min",
      "PressureSensorSV": "Sensor-Variante",
      "TemperatureSensorDT": "Zeit Grenzwertüberschreitung",
      "TemperatureSensorSV": "Sensor-Variante",
      "TemperatureSensorT": "Temperatur",
      "TemperatureSensorTMAX": "Temperatur-Grenzwert max",
      "TemperatureSensorTMIN": "Temperatur-Grenzwert min",
      "VTFlowSensorDT": "Zeit Grenzwertüberschreitung",
      "VTFlowSensorINC": "Zeitinkrement",
      "VTFlowSensorN": "Zähler",
      "VTFlowSensorNR": "Nennweite",
      "VTFlowSensorPMAX": "Durchfluss Grenzwert max",
      "VTFlowSensorPMIN": "Durchfluss Grenzwert min",
      "VTFlowSensorQ": "Durchfluss",
      "VTFlowSensorSV": "Sensor Variante",
      "VTTemperatureSensorDT": "Zeit Grenzwertüberschreitung",
      "VTTemperatureSensorT": "Temperatur",
      "VTTemperatureSensorTMAX": "Temperatur Grenzwert max",
      "VTTemperatureSensorTMIN": "Temperatur Grenzwert min",
      "beateAHCI": "Intervall automatische Hygienespülung",
      "beateBFV": "Big flush volume",
      "beateCFT": "Komfortfuntion Timeout",
      "beateCFTT": "Komfortfuntion Zieltemperatur",
      "beateCMD": "Dauer Reinungungsabschaltung",
      "beateECM": "Reinigungsabschaltung",
      "beateHCTTW": "Hygienespülung Zieltemperatur warm",
      "beateMHCDW": "Maximaldauer Hygienespülung warm",
      "beateMHCLDC": "Minimaldauer Hygienespülung kalt",
      "beateSCM": "Komfortfunktion ein-/ausschalten",
      "beateSFV": "Small flush volume",
      "beateWFR": "Water flow rate",
      "dteAReg": "Anlage betriebsbereit",
      "dteCOUNTS": "Anzahl Startvorgänge",
      "dteCPM": "Zirkulationspumpe An/Aus",
      "dteDV": "DTE-Variante",
      "dteFTLPP": "Funktionstest: Pumpe unten Leistung",
      "dteFTLPS": "Funktionstest: Pumpe unten an/aus",
      "dteFTUPP": "Funktionstest: Pumpe oben Leistung",
      "dteFTUPS": "Funktionstest: Pumpe oben an/aus",
      "dteIACP": "Zirkulationspumpe (An/Aus)",
      "dteICPC": "Zirkulationspumpe angeschlossen",
      "dteIUC": "UFC angeschlossen",
      "dtePLPP": "Heizungsseite Pumpenleistung, Untere Pumpe",
      "dtePTVL": "Heizungsseite Vorlauf, Ist-Temperatur",
      "dtePUPP": "Heizungsseite Pumpenleistung, Obere Pumpe",
      "dteSAPWH": "Trinkwasser warm (PWH), Ist-Temperatur",
      "dteSATPWHC": "Trinkwasser warm, Zirkulation (PWH-C), Ist-Temperatur",
      "dteSATPWHPWHC": "Mischtemperatur PWH und PWH-C, Ist-Temperatur",
      "dteSAVRPWHPWHC": "Volumenstrom PWH & PWH-C, Ist-Volumenstrom",
      "dteSMode": "Umschaltung: Grundbetrieb, Normabetrieb, Thermischer Desinfektionsmodus, Wartungsmodus",
      "dteSTPWH": "Trinkwasser warm (PWH), Soll-Temperatur",
      "rulanticaFlowQA1": "Ventilöffnung in %",
      "rulanticaTempQA1": "Temperatur in Grad",
      "rulanticaWaterDur": "Spüldauer in Sekunden",
      "sens-e-1-pt1000": "Multi I/O 1 Pt1000",
      "sens-e-1-sensor-type": "Sensor Type",
      "sens-e-2-pt1000": "Multi I/O 2 Pt1000",
      "sens-e-2-sensor-type": "Sensor Type",
      "ufcfc": "UFC Fehlerkontakt",
      "viegaIV": "Interface version",
      "viegaOH": "Betriebsdauer",
      "viegaPId": "Product Id",
      "viegaSN": "Seriennummer",
      "viegaSV": "Software-Version",
      "walleAHCI": "Automatische-Hygienespülung-Intervall",
      "walleCMD": "Dauer Reinungungsabschaltung",
      "walleECM": "Reinigungsabschaltung",
      "walleHCTTW": "Hygienespülung Zieltemperatur warm",
      "walleMHCDC": "Minimaldauer Hygienespülung kalt",
      "walleMHCDW": "Maximaldauer Hygienespülung warm",
      "walleMT": "Maximaltemperatur",
      "walleSMD": "Dauer Sicherheitsabschaltung",
      "walleSSM": "Sicherheitabschaltung an/aus",
      "walleWFR": "Wasserflussrate",
      "zirkeDefaultMode": "Auswahl Warm-/Kaltwasserzirkulation",
      "zirkeMVPWCC": "Manuelle Ventilstellung PWC-C",
      "zirkeMVPWHC": "Manuelle Ventilstellung PWH-C",
      "zirkeOperatingMode": "Betriebsmodus",
      "zirkeSATTPWHC": "Stand-Alone-Temperatur-Sollwert PWH-C",
      "zirkeSelfCleaning": "Selbstreinigungsfunktion ausführen",
      "zirkeTPWCC": "Temperatur PWC-C",
      "zirkeTPWHC": "Temperatur PWH-C",
      "zirkeTTPWCC": "Temperatur-Sollwert PWC-C",
      "zirkeTTPWHC": "Temperatur-Sollwert PWH-C",
      "zirkeVPWHC": "Ventilstellung PWC-C"
    },
    "DEVICE_TYPE_NAME": {
      "BeatE": "Prevista Dry WC-Element mit integrierter Spülstation",
      "Controller": "AquaVip Controller",
      "DTE": "DTE",
      "FlowAndTemperatureSensor": "Kombisensor Durchfluss und Temperatur",
      "FlowSensor": "Durchflusssensor",
      "GPIO": "GPIO",
      "Hyplus": "Hyplus",
      "KeySwitch": "Schlüsselschalter",
      "LEDBar": "LED-Leiste",
      "MagneticValve": "Ventil",
      "PressureSensor": "Drucksensor",
      "PulseSensor": "Pulssensor",
      "Pump": "Pumpe",
      "Rulantica": "Rulantica",
      "RulanticaT": "Rulantica-T",
      "TemperatureSensor": "Temperatursensor",
      "UfcFaultContact": "Ufc-Fehler-Kontakt",
      "WallE": "AquaVip Waschtischarmatur",
      "WirePort": "WirePort",
      "WireSens": "WireSens",
      "ZirkE": "Zirk-E"
    },
    "FUNCTIONTEST": {
      "DTE": {
        "CANCONNECTIONTEST": "CAN-Verbindung",
        "CANCONNECTIONTEST_FAILED": "",
        "CANCONNECTIONTEST_HWVERSION": "",
        "CANCONNECTIONTEST_ITFVERSION": "",
        "CANCONNECTIONTEST_PRODUCTID": "",
        "CANCONNECTIONTEST_SERIALNUMBER": "",
        "CANCONNECTIONTEST_SUCCESS": "Die CAN-Verbindung ist ok.",
        "CANCONNECTIONTEST_SWVERSION": "",
        "COMMUNICATIONERROR": "",
        "DESCRIPTION": "",
        "FINALIZEERROR": "",
        "FLOWSENSORTEST": "Durchflusssensor",
        "FLOWSENSORTEST_FAILED": "Gemessener Volumenstrom ist nicht plausibel.",
        "FLOWSENSORTEST_HINT": "Bitte berücksichtigen: Der Volumenstrom muss über der DTE-Messgrenze liegen.",
        "FLOWSENSORTEST_MEASUREDVALUE": "Gemmessener Volumenstrom",
        "FLOWSENSORTEST_PLAUSIBILITYQUESTION": "Entspricht der gemessene Volumenstrom einem zu erwartenden Wert?",
        "FLOWSENSORTEST_SENSORERROR": "Kommunikationsfehler mit Durchflussensor. Mögliche Ursachen: Sensor nicht verbunden, Kurzschluss oder Kabelbruch.",
        "FLOWSENSORTEST_SUCCESS": "Gemessener Volumenstrom ist plausibel.",
        "FLOWSENSORTEST_VALUEWAS": "Gemessener Volumenstrom betrug {0}.",
        "INPUT_NO": "",
        "INPUT_OK": "",
        "INPUT_YES": "",
        "INTERNALERROR": "",
        "LEDBARTEST": "LED-Leiste",
        "LEDBARTEST_BLUE": "Blau",
        "LEDBARTEST_BOTH": "Rot & Blau",
        "LEDBARTEST_FAILED": "Das LED-Testmuster wurde nicht richtig erkannt.",
        "LEDBARTEST_NONE": "Keine",
        "LEDBARTEST_QUESTION": "Welche LED leuchtet gerade?",
        "LEDBARTEST_RED": "Rot",
        "LEDBARTEST_STEP": "Schritt {0}/{1}",
        "LEDBARTEST_SUCCESS": "Das LED-Testmuster wurde richtig erkannt.",
        "NONE": "",
        "PUMPTEST": "Pumpe",
        "PUMPTEST_CURRENT": "Strom (mA): Oben: {0}; Unten: {1}",
        "PUMPTEST_FAILED": "Die Pumpe ist verkehrt angeschlossen.",
        "PUMPTEST_PUMPBOTTOM": "Untere Pumpe (mA)",
        "PUMPTEST_PUMPTOP": "Obere Pumpe (mA)",
        "PUMPTEST_QUESTION": "Bitte messen Sie den Strom mit einem Zangenstrommesser und geben den Wert ein.",
        "PUMPTEST_STEP": "{0}/2",
        "PUMPTEST_SUCCESS": "Die Pumpen sind korrekt verbunden.",
        "SUPPLYVOLTAGETEST": "Versorgungsspannung",
        "SUPPLYVOLTAGETEST_FAILED": "Die Spannungsversorgung muss zwischen {0} und {1} liegen.",
        "SUPPLYVOLTAGETEST_SUCCESS": "Die Spannungsversorgung lag mit {0} und {1} im Normbereich.",
        "SUPPLYVOLTAGETEST_SUPPLYVOLTAGE": "Spannungsversorgung",
        "TEMPERATURESENSORTEST": "Temperatursensor",
        "TEMPERATURESENSORTEST_DTESUBSTITUTION": "Die DTE wurde ausgetauscht.",
        "TEMPERATURESENSORTEST_DTESUBSTITUTIONQUESTION": "Wurde der DTE-Controller ausgetauscht?",
        "TEMPERATURESENSORTEST_DTESUBSTITUTIONTEMPERATURSENSORHINT": "Bitte stellen Sie sicher, dass Temperatursensoren angeschlossen sind, da es ansonsten zu Regelungsfehlern kommen wird.",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORAUTOMATICFAILURE": "Kommunikationsfehler mit den Temperatursensoren.",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORERROR": "Die Kommunikation mit den Temperatursensoren ist fehlgeschlagen. Mögliche Ursachen: PWH: Sensor nicht verbunden, Kurzschluss; PWHC: Kabelbruch.",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORMANUALFAILURE": "Die gemessenen Temperaturwerte stimmen nicht mit den erwarteten überein.",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORPWCPWHC": "",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORPWH": "",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORPWHC": "",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORQUESTION": "Sind die Temperaturwerte plausibel?",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORSUCCESS": "Die Temperaturwerte sind plausibel.",
        "TEMPERATURESENSORTEST_TEMPERATURESENSORSUPPLY": "",
        "TEMPERATURESENSORTEST_TEMPERATUREVALUESSTRING": "PWH: {0}, PWC u. PWHC: {1}, PWHC: {2}, Versorgung: {3}.",
        "WATERTEST": "Wasser",
        "WATERTEST_NOWATER": "Das System muss mit Wasser gefüllt sein!",
        "WATERTEST_WATERFILLEDQUESTION": "Ist das System mit Wasser gefüllt?"
      }
    },
    "MESSAGE_TYPES": {
      "CANSlaveAutomaticResetAfterHardwareFailure": "CAN-Slave-Reset nach Hardware-Fehler. {{Reason}}",
      "CANSlaveHardwarePersistentFailure": "CAN-Slave hat persistenten Hardware-Fehler. {{Reason}}",
      "ControllerPointTableSvc": {
        "AssignPointAddressToControllerPoint": "Requester User ID: {{requesterUserId}}, Controller Point name: {{controllerPoint.name}}, Node ID of Controller Point: {{controllerPoint.controllerID}}, remark of Controller Point: {{controllerPoint.remark}}",
        "CreateControllerPointWithCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of a controller point: {{name}}, id of the controller: {{controllerId}}, remark of the controller point: {{remark}}",
        "CreateControllerPointWithUUIDAndCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of a controller point: {{name}}, id of the controller: {{controllerId}}, remark of the controller point: {{remark}}, UUID of the device: {{targetUUID}}",
        "DeleteControllerPoint": "Requester User ID: {{requesterUserId}}, controllerPointEdit.uuid: {{controllerPointEdit.uuid}}, controllerPointEdit.name: {{controllerPointEdit.name}}, controllerPointEdit.controllerId: {{controllerPointEdit.controllerId}}, controllerPointEdit.remark: {{controllerPointEdit.remark}}, controllerPointEdit.building: {{controllerPointEdit.building}}, controllerPointEdit.area: {{controllerPointEdit.area}}, controllerPointEdit.room: {{controllerPointEdit.room}}, controllerPointEdit.segment: {{controllerPointEdit.segment}}, controllerPointEdit.newEnabledTimestamp: {{controllerPointEdit.newEnabledTimestamp}}, controllerPointEdit.newDisabledTimestamp: {{controllerPointEdit.newDisabledTimestamp}}",
        "InstallControllerToControllerPoint": "Requester User ID: {{requesterUserId}}, controllerPointEdit.uuid: {{controllerPointEdit.uuid}}, controllerPointEdit.name: {{controllerPointEdit.name}}, controllerPointEdit.controllerId: {{controllerPointEdit.controllerId}}, controllerPointEdit.remark: {{controllerPointEdit.remark}}, controllerPointEdit.building: {{controllerPointEdit.building}}, controllerPointEdit.area: {{controllerPointEdit.area}}, controllerPointEdit.room: {{controllerPointEdit.room}}, controllerPointEdit.segment: {{controllerPointEdit.segment}}, controllerPointEdit.newEnabledTimestamp: {{controllerPointEdit.newEnabledTimestamp}}, controllerPointEdit.newDisabledTimestamp: {{controllerPointEdit.newDisabledTimestamp}}",
        "SetControllerPointControllerId": "Requester User ID: {{requesterUserId}}, controllerPointEdit.uuid: {{controllerPointEdit.uuid}}, controllerPointEdit.name: {{controllerPointEdit.name}}, controllerPointEdit.controllerId: {{controllerPointEdit.controllerId}}, controllerPointEdit.remark: {{controllerPointEdit.remark}}, controllerPointEdit.building: {{controllerPointEdit.building}}, controllerPointEdit.area: {{controllerPointEdit.area}}, controllerPointEdit.room: {{controllerPointEdit.room}}, controllerPointEdit.segment: {{controllerPointEdit.segment}}, controllerPointEdit.newEnabledTimestamp: {{controllerPointEdit.newEnabledTimestamp}}, controllerPointEdit.newDisabledTimestamp: {{controllerPointEdit.newDisabledTimestamp}}",
        "SetControllerPointDisabledTimestamp": "Requester User ID: {{requesterUserId}}, controllerPointEdit.uuid: {{controllerPointEdit.uuid}}, controllerPointEdit.name: {{controllerPointEdit.name}}, controllerPointEdit.controllerId: {{controllerPointEdit.controllerId}}, controllerPointEdit.remark: {{controllerPointEdit.remark}}, controllerPointEdit.building: {{controllerPointEdit.building}}, controllerPointEdit.area: {{controllerPointEdit.area}}, controllerPointEdit.room: {{controllerPointEdit.room}}, controllerPointEdit.segment: {{controllerPointEdit.segment}}, controllerPointEdit.newEnabledTimestamp: {{controllerPointEdit.newEnabledTimestamp}}, controllerPointEdit.newDisabledTimestamp: {{controllerPointEdit.newDisabledTimestamp}}",
        "SetControllerPointEnabledTimestamp": "Requester User ID: {{requesterUserId}}, controllerPointEdit.uuid: {{controllerPointEdit.uuid}}, controllerPointEdit.name: {{controllerPointEdit.name}}, controllerPointEdit.controllerId: {{controllerPointEdit.controllerId}}, controllerPointEdit.remark: {{controllerPointEdit.remark}}, controllerPointEdit.building: {{controllerPointEdit.building}}, controllerPointEdit.area: {{controllerPointEdit.area}}, controllerPointEdit.room: {{controllerPointEdit.room}}, controllerPointEdit.segment: {{controllerPointEdit.segment}}, controllerPointEdit.newEnabledTimestamp: {{controllerPointEdit.newEnabledTimestamp}}, controllerPointEdit.newDisabledTimestamp: {{controllerPointEdit.newDisabledTimestamp}}",
        "SetControllerPointMainMetaData": "Requester User ID: {{requesterUserId}}, input.controllerUUID: {{input.controllerUUID}}, input.controllerPointUUID: {{input.controllerPointUUID}}",
        "UninstallControllerFromControllerPoint": "Requester User ID: {{requesterUserId}}, target controller uuid: {{uuid}}",
        "UpdateControllerPoint": "Requester User ID: {{requesterUserId}}, input.building: {{input.building}}, input.area: {{input.area}}, input.room: {{input.room}}, input.segment: {{input.segment}}, input.controllerPointUUID: {{input.controllerPointUUID}}"
      },
      "ControllerTableSvc": {
        "CreateControllerWithCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of the controller: {{name}}, serial number of the controller: {{serialNumber}}, remark of the controller: {{remark}}, timestamp of last maintenance: {{lastMaintenanceTimestamp}}, interval of maintenance: {{maintenanceInterval}}",
        "CreateControllerWithUUIDAndCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of the controller: {{name}}, serial number of the controller: {{serialNumber}}, remark of the controller: {{remark}}, timestamp of last maintenance: {{lastMaintenanceTimestamp}}, interval of maintenance: {{maintenanceInterval}}, UUID of the device: {{targetUUID}}",
        "DeleteController": "Requester User ID: {{requesterUserId}}, UUID of Controller: {{controllerParams.uuid}}, Controller name: {{controllerParams.newName}}, SerialNumber of Controller: {{controllerParams.newSerialNumber}}, Remark of Controller: {{controllerParams.newRemark}}, Maintenance Interval of Controller: {{controllerParams.newMaintenanceIntervalDays}}, Last Maintenance Timestamp of Controller: {{controllerParams.newLastMaintenanceTimestamp}}",
        "SetControllerCliqueID": "Requester User ID: {{requesterUserId}}, UUID: {{controllerParams.uuid}}, Controller name: {{controllerParams.newName}}, SerialNumber of Controller: {{controllerParams.newSerialNumber}}, Remark of Controller: {{controllerParams.newRemark}}, Maintenance Interval of Controller: {{controllerParams.newMaintenanceInterval}}, Last Maintenance Timestamp of Controller: {{controllerParams.newLastMaintenanceTimestamp}}",
        "SetControllerCliqueIDByName": "Requester User ID: {{requesterUserId}}, UUID of Controller: {{controllerParams.uuid}}, Controller name: {{controllerParams.newName}}, SerialNumber of Controller: {{controllerParams.newSerialNumber}}, Remark of Controller: {{controllerParams.newRemark}}, Maintenance Interval of Controller: {{controllerParams.newMaintenanceIntervalDays}}, Last Maintenance Timestamp of Controller: {{controllerParams.newLastMaintenanceTimestamp}}",
        "SetControllerMainMetadata": "Requester User ID: {{requesterUserId}}, controllerParams.uuid: {{controllerParams.uuid}}, controllerParams.newCliqueID: {{controllerParams.newCliqueID}}",
        "SetControllerMaintenance": "Requester User ID: {{requesterUserId}}, controllerParams.targetName: {{controllerParams.targetName}}, controllerParams.newCliqueID: {{controllerParams.newCliqueID}}",
        "SetControllerMetadata": "Requester User ID: {{requesterUserId}}, UUID of Controller: {{uuid}}"
      },
      "CreateHygieneCleansingFailedBlockedMessageTypes": "Hygienespülung \"{{functionName}}\" fehlgeschlagen auf {{flushPipeType}}, da Geräte \"{{hygieneCleansingBlockedDeviceNames}}\" abgesperrt durch folgende Funktionen: \"{{hygieneCleansingBlockingFunctionNames}}\".",
      "CreateHygieneCleansingFailedDeviceMessageTypes": "Hygienespülung \"{{functionName}}\" fehlgeschlagen auf {{flushPipeType}} für Gerät: {{devicePointName}}, da {{hygieneCleansingFailedDeviceReason}}. Zusatzinformationen: {{hygieneCleansingFailedDeviceReasonParameter}}.",
      "CreateHygieneCleansingFailedMessageTypes": "Hygienespülung \"{{functionName}}\" fehlgeschlagen auf {{flushPipeType}}, da nur {{successfulCount}} Geräte erfolgreich waren und {{failedCount}} fehlgeschlagen sind. {{failedTemperatureCount}} Geräte haben nicht die Zieltemperatur erreicht und {{timeoutCount}} Geräte haben die Wartezeit überschritten.",
      "CreateHygieneCleansingSuccessfulMessageTypes": "Hygienespülung \"{{functionName}}\" auf {{flushPipeType}} war erfolgreich.",
      "CreateSensorLimitMaxViolationMessageTypes": "Sensor {{sensorName}} hat LimitMax ({{limitMax}}) für {{timeLimitViolationSeconds}} Sekunden überschritten!",
      "CreateSensorLimitMinViolationMessageTypes": "Sensor {{sensorName}} hat LimitMin ({{limitMin}}) für {{timeLimitViolationSeconds}} Sekunden überschritten!",
      "DevicePointTableSvc": {
        "AssignControllerPointToDevicePoint": "Requester User ID: {{requesterUserId}}, device point name: {{param.name}}, Node ID of Device Point: {{param.nodeID}}, ControllerID of a Controller Point: {{param.controllerID}}, remark of device point: {{param.remark}}, Enabled Timestamp of Device Point: {{param.enabledTimestamp}}, Point Address UUID: {{param.pointAddressUUID}}, Name of the device type: {{param.deviceTypeName}}",
        "AssignPointAddressToDevicePoint": "Requester User ID: {{requesterUserId}}, device point name: {{param.name}}, Node ID of Device Point: {{param.nodeID}}, ControllerID of a Controller Point: {{param.controllerID}}, remark of device point: {{param.remark}}, Enabled Timestamp of Device Point: {{param.enabledTimestamp}}, Point Address UUID: {{param.pointAddressUUID}}, Name of the device type: {{param.deviceTypeName}}",
        "AssignPointAddressUUIDToDevicePoint": "Requester User ID: {{requesterUserId}}, UUID of the DevicePoint: {{uuid}}",
        "CreateDevicePointWithCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of this device point: {{name}}, node id for use in opcsa: {{nodeId}}, comment on this device point: {{remark}}, name of the device type: {{deviceTypeName}}",
        "CreateDevicePointWithCliqueIdLesser": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of this device point: {{name}}, comment on this device point: {{remark}}, name of the device type: {{deviceTypeName}}",
        "CreateDevicePointWithUUIDAndCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of this device point: {{name}}, node id for use in opcsa: {{nodeId}}, comment on this device point: {{remark}}, name of the device type: {{deviceTypeName}}, UUID of the device: {{targetUUID}}",
        "DeleteDevicePoint": "Requester User ID: {{requesterUserId}}, devicePointEdit.uuid: {{devicePointEdit.uuid}}, devicePointEdit.name: {{devicePointEdit.name}}, devicePointEdit.controllerId: {{devicePointEdit.controllerId}}, devicePointEdit.nodeId: {{devicePointEdit.nodeId}}, devicePointEdit.remark: {{devicePointEdit.remark}}, devicePointEdit.building: {{devicePointEdit.building}}, devicePointEdit.area: {{devicePointEdit.area}}, devicePointEdit.room: {{devicePointEdit.room}}, devicePointEdit.segment: {{devicePointEdit.segment}}, devicePointEdit.newEnabledTimestamp: {{devicePointEdit.newEnabledTimestamp}}, devicePointEdit.newDisabledTimestamp: {{devicePointEdit.newDisabledTimestamp}}",
        "InstallDeviceToDevicePoint": "Requester User ID: {{requesterUserId}}, devicePointEdit.uuid: {{devicePointEdit.uuid}}, devicePointEdit.name: {{devicePointEdit.name}}, devicePointEdit.controllerId: {{devicePointEdit.controllerId}}, devicePointEdit.nodeId: {{devicePointEdit.nodeId}}, devicePointEdit.remark: {{devicePointEdit.remark}}, devicePointEdit.building: {{devicePointEdit.building}}, devicePointEdit.area: {{devicePointEdit.area}}, devicePointEdit.room: {{devicePointEdit.room}}, devicePointEdit.segment: {{devicePointEdit.segment}}, devicePointEdit.newEnabledTimestamp: {{devicePointEdit.newEnabledTimestamp}}, devicePointEdit.newDisabledTimestamp: {{devicePointEdit.newDisabledTimestamp}}",
        "ResetDevicePointDisabledTimestamp": "Requester User ID: {{requesterUserId}}, devicePointEdit.uuid: {{devicePointEdit.uuid}}, devicePointEdit.name: {{devicePointEdit.name}}, devicePointEdit.controllerId: {{devicePointEdit.controllerId}}, devicePointEdit.nodeId: {{devicePointEdit.nodeId}}, devicePointEdit.remark: {{devicePointEdit.remark}}, devicePointEdit.building: {{devicePointEdit.building}}, devicePointEdit.area: {{devicePointEdit.area}}, devicePointEdit.room: {{devicePointEdit.room}}, devicePointEdit.segment: {{devicePointEdit.segment}}, devicePointEdit.newEnabledTimestamp: {{devicePointEdit.newEnabledTimestamp}}, devicePointEdit.newDisabledTimestamp: {{devicePointEdit.newDisabledTimestamp}}",
        "SetDevicePointCliqueId": "Requester User ID: {{requesterUserId}}, devicePointEdit.uuid: {{devicePointEdit.uuid}}, devicePointEdit.name: {{devicePointEdit.name}}, devicePointEdit.controllerId: {{devicePointEdit.controllerId}}, devicePointEdit.nodeId: {{devicePointEdit.nodeId}}, devicePointEdit.remark: {{devicePointEdit.remark}}, devicePointEdit.building: {{devicePointEdit.building}}, devicePointEdit.area: {{devicePointEdit.area}}, devicePointEdit.room: {{devicePointEdit.room}}, devicePointEdit.segment: {{devicePointEdit.segment}}, devicePointEdit.newEnabledTimestamp: {{devicePointEdit.newEnabledTimestamp}}, devicePointEdit.newDisabledTimestamp: {{devicePointEdit.newDisabledTimestamp}}",
        "SetDevicePointCliqueIdByName": "Requester User Id: {{requesterUserId}}, UUID of the target device: {{deviceUUID}}, UUID of the target device point: {{devicePointUUID}}",
        "SetDevicePointControllerIdAndNodeId": "Requester User Id: {{requesterUserId}}, UUID of the target device: {{deviceUUID}}, UUID of the target device point: {{devicePointUUID}}",
        "SetDevicePointDisabledTimestamp": "Requester User ID: {{requesterUserId}}, input.pointAddressUUID: {{input.pointAddressUUID}}, input.devicePointUUID: {{input.devicePointUUID}}, input.building: {{input.building}}, input.area: {{input.area}}, input.room: {{input.room}}, input.segment: {{input.segment}}",
        "SetDevicePointEnabledTimestamp": ": {{requesterUserId}}, : {{devicePointUUID}}, : {{nodeId}}",
        "SetDevicePointMainMetaData": "Requester User ID: {{requesterUserId}}, input.targetUUID: {{input.targetUUID}}, input.controllerID: {{input.controllerID}}",
        "SetDevicePointMetadata": "Requester User ID: {{requesterUserId}}, Target UUID of Device Point: {{targetUUID}}",
        "SetDevicePointNodeId": "Requester User ID: {{requesterUserId}}, devicePointParams.targetUUID: {{devicePointParams.targetUUID}}, devicePointParams.cliqueID: {{devicePointParams.cliqueID}}",
        "UnassignControllerPointFromDevicePoint": "Requester User ID: {{requesterUserId}}, devicePointParams.targetName: {{devicePointParams.targetName}}, devicePointParams.cliqueID: {{devicePointParams.cliqueID}}",
        "UninstallDeviceFromDevicePoint": "Requester User ID: {{requesterUserId}}, Target UUID: {{targetUUID}}, Point Address UUID: {{pointAddressUUID}}",
        "UpdateDevicePoint": "requesterUserId: {{requesterUserId}}, uuid: {{uuid}}"
      },
      "DevicesTableSvc": {
        "CreateDeviceFirmware": "Requester User Id: {{requesterUserId}}, Version of the Device Firmware: {{createDeviceFirmwareParameters.version}}, Remark of the Device Firmware: {{createDeviceFirmwareParameters.remark}}, Firmware File of the Device Firmware: {{createDeviceFirmwareParameters.filePath}}",
        "CreateDeviceType": "Requester User Id: {{requesterUserId}}, uuid: {{uuid}}",
        "CreateDeviceWithCliqueIdEx": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of the device: {{name}}, identity object: revision number: {{revisionNumber}}, identity object: serial number: {{serialNumber}}, remark: {{remark}}, timestamp of last maintenance: {{lastMaintenanceTimestamp}}, interval of maintenance: {{maintenanceInterval}}, Name of the device type: {{deviceTypeName}}, UUID of the device ancestor: {{ancestorDeviceUUID}}, Port of this device on the ancestor device: {{ancestorDevice_Port}}, UUID of the creator (e.g. Controller, ControllerPoint, User, ..., Actor): {{createdByUUID}}",
        "CreateDeviceWithUUIDAndCliqueIdEx": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, name of the device: {{name}}, identity object: revision number: {{revisionNumber}}, identity object: serial number: {{serialNumber}}, remark: {{remark}}, timestamp of last maintenance: {{lastMaintenanceTimestamp}}, interval of maintenance: {{maintenanceInterval}}, Name of the device type: {{deviceTypeName}}, UUID of the device ancestor: {{ancestorDeviceUUID}}, Port of this device on the ancestor device: {{ancestorDevice_Port}}, UUID of the creator (e.g. Controller, ControllerPoint, User, ..., Actor): {{createdByUUID}}, UUID of the device: {{targetUUID}}",
        "DeleteDevice": "UUID of source device: {{sourceUUID}}, UUID of target device: {{targetUUID}}",
        "DeleteDeviceFirmware": "Requester User Id: {{requesterUserId}}, Version of the Device Firmware: {{createDeviceFirmwareParameters.version}}, Remark of the Device Firmware: {{createDeviceFirmwareParameters.remark}}, Firmware File of the Device Firmware: {{createDeviceFirmwareParameters.filePath}}",
        "DeleteDeviceType": "Requester User Id: {{requesterUserId}}, param.version: {{param.version}}, param.newVersion: {{param.newVersion}}, param.remark: {{param.remark}}, param.filePath: {{param.filePath}}",
        "InstallDeviceFirmwareToDevice": "Requester User Id: {{requesterUserId}}, deviceUuid: {{deviceUuid}}, firmwareVersion: {{firmwareVersion}}",
        "SetDeviceAncestorAndPortByUUID": "Requester User ID: {{requesterUserId}}, createDeviceTypeParameters.name: {{createDeviceTypeParameters.name}}, createDeviceTypeParameters.templateFile: {{createDeviceTypeParameters.templateFile}}",
        "SetDeviceAncestorByName": "Requester User Id: {{requesterUserId}}, Name of type: {{name}}",
        "SetDeviceAncestorByUUID": "Requester User Id: {{requesterUserId}}, param.name: {{param.name}}, param.newName: {{param.newName}}, param.templateFile: {{param.templateFile}}",
        "SetDeviceFirmware": "Requester User Id: {{requesterUserId}}, : {{deviceUuid}}, : {{firmwareVersion}}",
        "SetDeviceIdentityObject": "Requester User Id: {{requesterUserId}}, parameters.deviceFirmwareVersion: {{parameters.deviceFirmwareVersion}}, parameters.deviceUUID: {{parameters.deviceUUID}}",
        "SetDeviceMainMetadata": "Requester User Id: {{requesterUserId}}, UUID of Device: {{param.uuid}}, Device name: {{param.newName}}, SerialNumber of Device: {{param.newSerialNumber}}, Revision Number of Device: {{param.newRevisionNumber}}, Device Type Name: {{param.newDeviceTypeName}}, Remark of Device: {{param.newRemark}}",
        "SetDeviceMaintenance": "Requester User ID: {{requesterUserId}}, input.targetUUID: {{input.targetUUID}}, input.newLastMaintenanceTimestamp: {{input.newLastMaintenanceTimestamp}}, input.newMaintenanceIntervalDays: {{input.newMaintenanceIntervalDays}}",
        "SetDeviceMetadata": "Requester User ID: {{requesterUserId}}, input.targetUUID: {{input.targetUUID}}, input.newVendorID: {{input.newVendorID}}, input.newProductCode: {{input.newProductCode}}, input.newRevisionNumber: {{input.newRevisionNumber}}, input.newSerialNumber: {{input.newSerialNumber}}",
        "SetDevicePreSelectedNodeId": "RequesterUserId: {{requesterUserId}}, targetUUID: {{targetUUID}}, newPreSelectedNodeId: {{newPreSelectedNodeId}}",
        "SetDeviceType": "Requester User ID: {{requesterUserId}}, Target UUID: {{input.targetUUID}}, UUID Ancestor: {{input.ancestorUUID}}",
        "TransferDeviceConfiguration": "Requester User ID: {{requesterUserId}}, Target Name: {{input.targetName}}, UUID Ancestor: {{input.ancestorName}}",
        "UninstallDeviceFirmwareFromDevice": "Requester Uer ID: {{requesterUserId}}, Target UUID: {{input.targetUUID}}, UUID Ancestor: {{input.ancestorUUID}}, Port: {{input.ancestorPort}}"
      },
      "DteErrorMessage6600Types": "Verbindung zwischen AquaVip- und DTE-Controller konnte nicht aufgebaut werden. Wenn das Problem bestehen bleibt, wenden Sie sich an den Viega Service. (6600)",
      "DteErrorMessage6601Types": "Verbindungsfehler zum DTE. Wenden Sie sich an den Viega Service. (6601)",
      "DteErrorMessage6602Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6602)",
      "DteErrorMessage6603Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6603)",
      "DteErrorMessage6604Types": "De DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6604)",
      "DteErrorMessage6605Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6605)",
      "DteErrorMessage6606Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6606)",
      "DteErrorMessage6607Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6607)",
      "DteErrorMessage6608Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6608)",
      "DteErrorMessage6609Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6609)",
      "DteErrorMessage6610Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6610)",
      "DteErrorMessage6611Types": "Der DTE wurde aufgrund eines Fehlers abgeschaltet. Wenden Sie sich an den Viega Service. (6611)",
      "DteErrorMessage6612Types": "Störung an der Spannungsversorgung. Wenden Sie sich an den Viega Service. (6612)",
      "DteErrorMessage6613Types": "Der DTE wurde aufgrund eines Fehlers an der Spannungsversorgung abgeschaltet.  Wenden Sie sich an den Viega Service. (6613)",
      "DteErrorMessage6614Types": "Softwarefehler. Wenden Sie sich an den Viega Service. (6614)",
      "DteErrorMessage6615Types": "Der DTE wurde aufgrund eines Softwarefehlers abgeschaltet.  Wenden Sie sich an den Viega Service. (6615)",
      "DteErrorMessage6616Types": "PWH-Temperatur zeitweise außerhalb des Sollbereichs. Ursache prüfen. (6616)",
      "DteErrorMessage6617Types": "PWH-Temperatur zeitweise außerhalb des Sollbereichs. Ursache prüfen. (6617)",
      "DteErrorMessage6618Types": "PWH-Temperatur außerhalb des Sollbereichs. Der DTE wurde abgeschaltet. Wenden Sie sich umgehend an den Viega Service. (6618)",
      "DteErrorMessage6619Types": "PWH-Temperatur außerhalb des Sollbereichs. Der DTE wurde abgeschaltet.  Wenden Sie sich umgehend an den Viega Service. (6619)",
      "DteErrorMessage6620Types": "Zu geringe Pufferspeicher-Temperatur. Der DTE wurde abgeschaltet. Pufferspeicher überprüfen. (6620)",
      "DteErrorMessage6621Types": "Der DTE wurde auf Werkseinstellungen zurückgesetzt. (6621)",
      "DteErrorMessage6622Types": "Funktionstest erfolgreich. (6622)",
      "DteErrorMessage6623Types": "Funktionstest fehlgeschlagen. (6623)",
      "DteErrorMessage6624Types": "Werksfunktionstest erfolgreich. (6624)",
      "DteErrorMessage6625Types": "Werksfunktionstest fehlgeschlagen. (6625)",
      "DteErrorMessage6626Types": "Thermische Desinfektion erfolgreich abgeschlossen. (6626)",
      "DteErrorMessage6627Types": "Thermische Desinfektion abgebrochen. (6627)",
      "DteErrorMessage6628Types": "Wartung in 30 Tagen fällig.(6628)",
      "DteErrorMessage6629Types": "Wartung fällig. (6629)",
      "DteErrorMessage6630Types": "Wartung durchgeführt. (6630)",
      "DteErrorMessage6631Types": "Der DTE wurde in den Grundbetrieb gesetzt, die Temperatur im Pufferspeicher überprüfen und ggf. erhöhen. Wenden Sie sich umgehend an den Viega Service. (6631)",
      "DteErrorMessage6632Types": "Zu geringe Pufferspeicher-Temperatur. Pufferspeicher überprüfen. (6632)",
      "DteErrorMessage6633Types": "PWH-C-Temperatur zeitweise außerhalb des Sollbereichs. Ursache prüfen. (6633)",
      "DteErrorMessage6634Types": "PWH-C-Temperatur außerhalb des Sollbereichs. Der DTE wurde abgeschaltet. Wenden Sie sich umgehend an den Viega Service. (6634)",
      "DteErrorMessage6635Types": "Der DTE wurde in den Werkszustand versetzt, da die Einstellungen nicht geladen werden konnten. Tritt diese Störung häufiger auf, wenden Sie sich an den Viega Service. (6635)",
      "DteErrorMessage6636Types": "Der DTE wurde aufgrund eines möglichen Fehlers abgeschaltet. Wenden Sie sich an den Viega Service wenn dieser Fehler wiederholt auftritt. (6636)",
      "DteErrorMessage6637Types": "Kein Zirkulationsvolumenstrom: Es wurde keine Zirkulation erkannt. Dies kann die Wassertemperatur-Regelung negativ beeinflussen. Ursache prüfen. (6637)",
      "DteErrorMessage6638Types": "Zirkulationsvolumenstrom wieder vorhanden: Die Zirkulation konnte wieder erkannt werden. (6638)",
      "DteUfcNotOkMessageTypes": "Der Ultrafiltrationskontakt (UFC) auf DTE {{dteName}} ist nicht in Ordnung! Darum wird die PWH-Zieltemperatur für diesen DTE von {{dtePwhTargetTemperatureOld}} auf {{dtePwhTargetTemperatureNew}} angehoben. Außerdem wird die Zieltemperatur von {{zirkePwhcTargetTemperatureOld}} auf {{zirkePwhcTargetTemperatureNew}} angepasst für folgende Zirkulationsventile: \"{{circulationValveNames}}\".",
      "ExecuteDeviceFunctionTestFailedMessageTypes": "Funktionstest fehlgeschlagen, da {{reason}}.",
      "FatalPersistantSystemFailureMessageTypes": "System im Fehlermodus, da {{reason}}.",
      "FlushPipeType": {
        "PWC": "PWC",
        "PWH": "PWH"
      },
      "FunctionManagementTableSvc": {
        "AddFlushableDevicePointToGroupFunction": "maximal temperature for potable water cold(pwc): {{variablesGlobal.temperaturePwcMax}}, stagnation time in minutes: {{variablesGlobal.stagnationTimeMaxMinutes}}, flush time in seconds: {{variablesGlobal.flushTimeMaxSec}}",
        "CreateFunction": "requesterUserId: {{requesterUserId}}, Is the function disabled?: {{functionInput.disabledTimestamp}}, true = flush all devices from DevicePointArrangement in paralell, false = flush the devices one after another (sequential order): {{functionInput.flushSchedule.flushParallel}}, Flush if this threshold is reached aka stagnation time max: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours}}, The flush is starting at this point in time, e.g. 05.06.19 08:32: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc}}, Waiting time between two flushes: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun}}, Start of the range, only hours and minutes are used, e.g. 02:03: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun.noFlushFrame.fromHourMinute}}, End of the range, only hours and minutes are used, e.g. 06:59: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun.noFlushFrame.fromHourMinute.toHourMinute}}, true = use legacy versions of flush and thermal disinfection: {{functionInput.legacy}}, Name of the function. Is unique, could be used as id: {{functionInput.name}}, functionInput.remark: {{functionInput.remark}}, Type of the function e.g. circulation: {{functionInput.type}}, functionInput.circulationInput.temperatureLevelObject.temperatureLevel: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius}}, functionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius.isSelectable: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius.isSelectable}}, uuid of the key switch: {{functionInput.keySwitchUuid}}, Uuid for the DTE (water heating element): {{functionInput.dteUuid}}, Uuid for UFC fault contact, only allowed for a circulation function: {{functionInput.ufcFaultContactUuid}}, Use UFC, only allowed for a circulation function: {{functionInput.useUFC}}, List of circulation valves: {{functionInput.circulationValveConfigurationMapping}}, Device uuid's for the flush operation. The first element will be flushed first, the second element will be flushed second and so on.: {{functionInput.flushableDevicePointUuids}}, Sensor for pwc: {{functionInput.temperatureSensorPwcDevicePointUuid}}, Clique id of the function: {{cliqueId}}",
        "DeleteDevicePointGroupFunction": ": {{requesterUserId}}, Name of the function: {{devicePointGroupFunctionName}}, Timestamp of the end of the cleaning shutdown: {{cleaningShutdownEnd}}",
        "RemoveFlushableDevicePointToGroupFunction": ": {{requesterUserId}}, Name of the flush schedule: {{devicePointGroupFunctionName}}, Exectuion time of the flush: {{executionTime}}, Type of the flush pipe: {{flushPipeType}}",
        "ResetDisabledTimestamp": ": {{requesterUserId}}, Is the function disabled?: {{functionInput.disabledTimestamp}}, true = flush all devices from DevicePointArrangement in paralell. false = flush the devices one after another (sequential order): {{functionInput.flushSchedule.flushParallel}}, Flush if this threshold is reached aka stagnation time max: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours}}, Start of the range, only hours and minutes are used, e.g. 02:03: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute}}, End of the range, only hours and minutes are used, e.g. 06:59: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute}}, The flush is starting at this point in time, e.g. 05.06.19 08:32: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc}}, Waiting time between two flushes: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan: {{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan}}, functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon}}\", functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue}}\", functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed}}\", functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu}}\", functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri}}\", functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat}}\", functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun: \"{{functionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun}}\", true = use legacy versions of flush and thermal disinfection: {{functionInput.legacy}}, Name of the function. Is unique, could be used as id: {{functionInput.name}}, functionInput.remark: {{functionInput.remark}}, Type of the function e.g. circulation: {{functionInput.type}}, functionInput.circulationInput.temperatureLevelObject.temperatureLevel: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{functionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius}}, uuid of the key switch: {{functionInput.keySwitchUuid}}, Uuid for the DTE (water heating element): {{functionInput.dteUuid}}, Uuid for UFC fault contact, only allowed for a circulation function: {{functionInput.ufcFaultContactUuid}}, List of circulation valves: {{functionInput.circulationValveConfigurationMapping}}, Device uuid's for the flush operation. The first element will be flushed first, the second element will be flushed second and so on.: \"{{functionInput.flushableDevicePointUuids}}\", Sensor for pwc: {{functionInput.temperatureSensorPwcDevicePointUuid}}, Clique id of the function: {{cliqueId}}",
        "SetCleaningShutdownEndTimestamp": ": {{requesterUserId}}, Name of the function>: {{devicePointGroupFunctionName}}, Is the function disabled?: {{updatedFunctionInput.disabledTimestamp}}, true = flush all devices from DevicePointArrangement in paralell. false = flush the devices one after another (sequential order): {{updatedFunctionInput.flushSchedule.flushParallel}}, Flush if this threshold is reached aka stagnation time max: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours}}, Start of the range, only hours and minutes are used, e.g. 02:03: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute}}, End of the range, only hours and minutes are used, e.g. 06:59: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute}}, The flush is starting at this point in time, e.g. 05.06.19 08:32: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc}}, Waiting time between two flushes: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon}}\", updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue}}\", updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed}}\", updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu}}\", updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri}}\", updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat}}\", updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun: \"{{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.noFlushFrame.fromHourMinute.toHourMinute.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun}}\", true = use legacy versions of flush and thermal disinfection: {{updatedFunctionInput.legacy}}, Name of the function. Is unique, could be used as id: {{updatedFunctionInput.name}}, updatedFunctionInput.remark: {{updatedFunctionInput.remark}}, Type of the function e.g. circulation: {{updatedFunctionInput.type}}, updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius}}, uuid of the key switch: {{updatedFunctionInput.keySwitchUuid}}, Uuid for the DTE (water heating element): {{updatedFunctionInput.dteUuid}}, Uuid for UFC fault contact, only allowed for a circulation function: {{updatedFunctionInput.ufcFaultContactUuid}}, List of circulation valves: {{updatedFunctionInput.circulationValveConfigurationMapping}}, Device uuid's for the flush operation The first element will be flushed first, the second element will be flushed second and so on.: \"{{updatedFunctionInput.flushableDevicePointUuids}}\", Sensor for pwc: {{updatedFunctionInput.temperatureSensorPwcDevicePointUuid}}",
        "SetDisabledTimestamp": ": {{requesterUserId}}, Name of the function: {{devicePointGroupFunctionName}}",
        "SetExcecutedAtLeastOnce": "requesterUserId: {{requesterUserId}}, true = if this function is at least executed once. Used to calculate the next flush after a power loss: {{functionInternal.executedAtLeastOnce}}, Clique of the function: {{functionInternal.cliqueId}}, Is the function disabled?: {{functionInternal.disabledTimestamp}}, Last execution of the flush for the pwh: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp}}, Last execution of the flush for the pwc: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp}}, End timestamp of the cleaning shutdown: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp}}, true = flush all devices from DevicePointArrangement in paralell, false = flush the devices one after another (sequential order): {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel}}, Flush if this threshold is reached aka stagnation time max: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours}}, The flush is starting at this point in time, e.g. 05.06.19 08:32: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc}}, Waiting time between two flushes: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat}}, functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun}}, Start of the range, only hours and minutes are used, e.g. 02:03: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun.noFlushFrame.fromHourMinute}}, End of the range, only hours and minutes are used, e.g. 06:59: {{functionInternal.flushSchedule.lastExecutionPwhTimestamp.lastExecutionPwcTimestamp.cleaningShutdownEndTimestamp.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun.noFlushFrame.fromHourMinute.toHourMinute}}, functionInternal.circulationValveUuids: {{functionInternal.circulationValveUuids}}, true = use legacy versions of flush and thermal disinfection: {{functionInternal.legacy}}, Name of the function. Is unique, could be used as id: {{functionInternal.name}}, functionInternal.remark: {{functionInternal.remark}}, Type of the function e.g. circulation: {{functionInternal.type}}, functionInternal.circulationInput.temperatureLevelObject.temperatureLevel: {{functionInternal.circulationInput.temperatureLevelObject.temperatureLevel}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{functionInternal.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{functionInternal.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius}}, functionInternal.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius.isSelectable: {{functionInternal.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius.isSelectable}}, uuid of the key switch: {{functionInternal.keySwitchUuid}}, Uuid for the DTE (water heating element): {{functionInternal.dteUuid}}, Uuid for UFC fault contact, only allowed for a circulation function: {{functionInternal.ufcFaultContactUuid}}, Use UFC, only allowed for a circulation function: {{functionInternal.useUFC}}, List of circulation valves: {{functionInternal.circulationValveConfigurationMapping}}, Device uuid's for the flush operation. The first element will be flushed first, the second element will be flushed second and so on.: {{functionInternal.flushableDevicePointUuids}}, Sensor for pwc: {{functionInternal.temperatureSensorPwcDevicePointUuid}}",
        "SetLastExecutionTimestamp": ": {{requesterUserId}}, : {{functionName}}, : {{devicePointUuid}}, true => add at the beginning of the device list, false => add at the end of the device list: {{hasHighPriority}}",
        "UpdateDevicePointGroupFunction": "requesterUserId: {{requesterUserId}}, Name of the function>: {{devicePointGroupFunctionName}}, Is the function disabled?: {{updatedFunctionInput.disabledTimestamp}}, true = flush all devices from DevicePointArrangement in paralell, false = flush the devices one after another (sequential order): {{updatedFunctionInput.flushSchedule.flushParallel}}, Flush if this threshold is reached aka stagnation time max: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours}}, The flush is starting at this point in time, e.g. 05.06.19 08:32: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc}}, Waiting time between two flushes: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat}}, updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun}}, Start of the range, only hours and minutes are used, e.g. 02:03: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun.noFlushFrame.fromHourMinute}}, End of the range, only hours and minutes are used, e.g. 06:59: {{updatedFunctionInput.flushSchedule.flushParallel.dependOnStagnationFlushPlan.intervalHours.fixIntervalFlushPlan.startDateUtc.intervalHours.dependOnTemperatureFlushPlan.activated.flushIfTemperatureHigherThan.weeklyFlushPlan.weekDays.mon.tue.wed.thu.fri.sat.sun.noFlushFrame.fromHourMinute.toHourMinute}}, true = use legacy versions of flush and thermal disinfection: {{updatedFunctionInput.legacy}}, Name of the function. Is unique, could be used as id: {{updatedFunctionInput.name}}, updatedFunctionInput.remark: {{updatedFunctionInput.remark}}, Type of the function e.g. circulation: {{updatedFunctionInput.type}}, updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius}}, only != null if TemperatureLevelCirculation = UfcManualConfig: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius}}, updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius.isSelectable: {{updatedFunctionInput.circulationInput.temperatureLevelObject.temperatureLevel.pwhTemperatureCelsius.pwhcTemperatureCelsius.isSelectable}}, uuid of the key switch: {{updatedFunctionInput.keySwitchUuid}}, Uuid for the DTE (water heating element): {{updatedFunctionInput.dteUuid}}, Uuid for UFC fault contact, only allowed for a circulation function: {{updatedFunctionInput.ufcFaultContactUuid}}, Use UFC, only allowed for a circulation function: {{updatedFunctionInput.useUFC}}, List of circulation valves: {{updatedFunctionInput.circulationValveConfigurationMapping}}, Device uuid's for the flush operation. The first element will be flushed first, the second element will be flushed second and so on.: {{updatedFunctionInput.flushableDevicePointUuids}}, Sensor for pwc: {{updatedFunctionInput.temperatureSensorPwcDevicePointUuid}}"
      },
      "FusiDteStateMachnineFatalError": "DTE-Controller befindet sich in Fehlermodus, da {{reason}}.",
      "FusiRestartMessageTypes": "Fusi-Reboot-Service leitet Systemneustart ein.",
      "HygieneCleansingFailedDeviceReason": {
        "DeviceStateAfterStartIsNotOk": "Gerätezustand nach Start nicht in Ordnung",
        "FailedStart": "Start fehlgeschlagen",
        "FailedTemperature": "Temperatur fehlgeschlagen",
        "InitialDeviceStateIsNotOk": "initialer Gerätezustand nicht in Ordnung",
        "Timeout": "Zeitüberschreitung",
        "UnkownError": "unbekannter Fehler"
      },
      "MessagesTableSvc": {
        "CreateEventType": "user identifier of the requester: {{requesterUserId}}, the index of the message entry: {{messageId}}, name of existing event type (ALARM, EVENT, DISRUPTION, MAINTENANCE, ...): {{eventType}}, an error code: {{errorCode}}, summary of the message: {{summary}}, description of the message: {{description}}",
        "DeleteLastMessages": "user identifier of the requester: {{requesterUserId}}, the index of the message entry: {{messageId}}, name of existing event type (ALARM, EVENT, DISRUPTION, MAINTENANCE, ...): {{eventType}}, an error code: {{errorCode}}, summary of the message: {{summary}}, description of the message: {{description}}",
        "DeleteMessages": ": {{requesterUserId}}, message id's: \"{{messageIds}}\" ",
        "DeleteMessagesAnyDeletedMarkOlderThanBoundedAllCliquesInternal": ": {{requesterUserId}}, message id's: \"{{messageIds}}\" ",
        "DeleteMessagesOlderThan": ": {{requesterUserId}}, message id's: \"{{messageIds}}\" ",
        "DeleteMessagesOlderThanBoundedAllCliquesInternal": "key: {{key}}, value: {{value}}",
        "ResetMessageAcknowledged": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "ResetMessageAnyDeletedMark": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "ResetMessageFixed": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "ResetMessageOwnDeletedMark": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "ResetMessageViewed": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "SetMessageAcknowledged": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "SetMessageAnyDeletedMark": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "SetMessageFixed": "user identifier of the requester: {{requesterUserId}}, the index of the message entry: {{messageIndex}}, name of existing event type (ALARM, EVENT, DISRUPTION, MAINTENANCE, ...): {{eventType}}, an error code: {{errorCode}}, summary of the message: {{summary}}, description of the message: {{description}}",
        "SetMessageOwnDeletedMark": "user identifier of the requester: {{requesterUserId}}, the index of the message entry: {{messageIndex}}, name of existing event type (ALARM, EVENT, DISRUPTION, MAINTENANCE, ...): {{eventType}}, an error code: {{errorCode}}, summary of the message: {{summary}}, description of the message: {{description}}",
        "SetMessageViewed": "user identifier of the requester: {{requesterUserId}}, a comma-separated list of indices of the entries of the messages (Integer-List, e.g.: 1,2,3): \"{{messageIds}}\" ",
        "UpdateMessageAny": "user identifier of the requester: {{requesterUserId}}, All messages older than this time will be deleted (examples: '2019-06-18T06:14:48', '2019-06-18 06:15', '2019-06-19'): {{timestampValue}}",
        "UpdateMessageAnyByIndex": "user identifier of the requester: {{requesterUserId}}, All messages older than this time will be deleted (examples: '2019-06-18T06:14:48', '2019-06-18 06:15', '2019-06-19'): {{timestampValue}}, Count of messages to be deleted: {{count}}",
        "UpdateMessageOwn": "user identifier of the requester: {{requesterUserId}}, All messages older than this time will be deleted (examples: '2019-06-18T06:14:48', '2019-06-18 06:15', '2019-06-19'): {{timestampValue}}, Count of messages to be deleted: {{count}}",
        "UpdateMessageOwnByIndex": "user identifier of the requester: {{requesterUserId}}, Count of messages to be deleted: {{count}}"
      },
      "PointAddressTableSvc": {
        "AssignPointAddressToControllerPoint": "Requester User Id: {{requesterUserId}}, Building of point address: {{param.building}}, Area of point address: {{param.area}}, Room of point address: {{param.room}}, Segment of point address: {{param.segment}}",
        "AssignPointAddressToControllerPointId": "Requester User ID: {{requesterUserId}}, Building of point address: {{param.building}}, Area of point address: {{param.area}}, Room of point address: {{param.room}}, Segment of point address: {{param.segment}}",
        "AssignPointAddressToDevicePoint": "Requester User ID: {{requesterUserId}}, pointAddress.building: {{pointAddress.building}}, pointAddress.area: {{pointAddress.area}}, pointAddress.room: {{pointAddress.room}}, pointAddress.segment: {{pointAddress.segment}}, pointAddress.newBuilding: {{pointAddress.newBuilding}}, pointAddress.newArea: {{pointAddress.newArea}}, pointAddress.newRoom: {{pointAddress.newRoom}}, pointAddress.newSegment: {{pointAddress.newSegment}}",
        "ChangePointAddressArea": "Requester User ID: {{requesterUserId}}, pointAddress.building: {{pointAddress.building}}, pointAddress.area: {{pointAddress.area}}, pointAddress.room: {{pointAddress.room}}, pointAddress.segment: {{pointAddress.segment}}, pointAddress.newBuilding: {{pointAddress.newBuilding}}, pointAddress.newArea: {{pointAddress.newArea}}, pointAddress.newRoom: {{pointAddress.newRoom}}, pointAddress.newSegment: {{pointAddress.newSegment}}",
        "ChangePointAddressBuilding": "Requester User ID: {{requesterUserId}}, pointAddress.building: {{pointAddress.building}}, pointAddress.area: {{pointAddress.area}}, pointAddress.room: {{pointAddress.room}}, pointAddress.segment: {{pointAddress.segment}}, pointAddress.newBuilding: {{pointAddress.newBuilding}}, pointAddress.newArea: {{pointAddress.newArea}}, pointAddress.newRoom: {{pointAddress.newRoom}}, pointAddress.newSegment: {{pointAddress.newSegment}}",
        "ChangePointAddressRoom": "Requester User ID: {{requesterUserId}}, pointAddress.building: {{pointAddress.building}}, pointAddress.area: {{pointAddress.area}}, pointAddress.room: {{pointAddress.room}}, pointAddress.segment: {{pointAddress.segment}}, pointAddress.newBuilding: {{pointAddress.newBuilding}}, pointAddress.newArea: {{pointAddress.newArea}}, pointAddress.newRoom: {{pointAddress.newRoom}}, pointAddress.newSegment: {{pointAddress.newSegment}}",
        "CreatePointAddressWithCliqueId": "User identifier: {{requesterUserId}}, id of the clique: {{cliqueId}}, building of a point address: {{building}}, area of a point address: {{area}}, room of point address: {{room}}, segment of a point address: {{segment}}",
        "DeletePointAddress": "Requester User ID: {{requesterUserId}}, input.building: {{input.building}}, input.area: {{input.area}}, input.room: {{input.room}}, input.segment: {{input.segment}}, input.controllerID: {{input.controllerID}}",
        "SetPointAddress": "Requester User ID: {{requesterUserId}}, pointAddressParam.targetUUID: {{pointAddressParam.targetUUID}}, pointAddressParam.newCliqueID: {{pointAddressParam.newCliqueID}}",
        "SetPointAddressArea": "Requester User ID: {{requesterUserId}}, input.devicePointUUID: {{input.devicePointUUID}}, input.building: {{input.building}}, input.area: {{input.area}}, input.room: {{input.room}}, input.segment: {{input.segment}}",
        "SetPointAddressBuilding": "Requester User ID: {{requesterUserId}}, pointAddressParam.building: {{pointAddressParam.building}}, pointAddressParam.area: {{pointAddressParam.area}}, pointAddressParam.room: {{pointAddressParam.room}}, pointAddressParam.segment: {{pointAddressParam.segment}}, pointAddressParam.newCliqueID: {{pointAddressParam.newCliqueID}}",
        "SetPointAddressCliqueId": "RequesterUserID: {{requesterUserId}}, Target UUID: {{targetUUID}}",
        "SetPointAddressCliqueIdByName": "RequesterUserID: {{requesterUserId}}, Controller ID: {{controllerID}}",
        "SetPointAddressRoom": "Requester User ID: {{requesterUserId}}, Target UUID: {{targetUUID}}",
        "UnassignPointAddressFromControllerPoint": "Requester User ID: {{requesterUserId}}, input.building: {{input.building}}, input.newArea: {{input.newArea}}, input.newRoom: {{input.newRoom}}, input.newSegment: {{input.newSegment}}",
        "UnassignPointAddressFromControllerPointId": "Requester User ID: {{requesterUserId}}, input.building: {{input.building}}, input.area: {{input.area}}, input.newRoom: {{input.newRoom}}, input.newSegment: {{input.newSegment}}",
        "UnassignPointAddressFromDevicePoint": "Requester User ID: {{requesterUserId}}, input.building: {{input.building}}, input.area: {{input.area}}, input.room: {{input.room}}, input.newSegment: {{input.newSegment}}"
      },
      "PreferenceTableSvc": {
        "SetPreference": "requestUserId: {{requestUserId}}, uuid: {{uuid}}, applicationKey: {{applicationKey}}, content: {{content}}",
        "SetPreferenceAsJson": "requestUserId: {{requestUserId}}, uuid: {{uuid}}, applicationKey: {{applicationKey}}, content: {{content}}",
        "SetSystemPreference": "applicationKey: {{applicationKey}}, content: {{content}}",
        "SetSystemPreferenceAsJson": "applicationKey: {{applicationKey}}, content: {{content}}"
      },
      "ProductionFunctionTestPassedMessageTypes": "Werksfunktionstest erfolgreich.",
      "ReportFilterTableSvc": {
        "AddConfiguration": "uuid: {{uuid}}",
        "DeleteConfiguration": "configuration: {{configuration}}"
      },
      "ReportTableSvc": {
        "AddService": "user identifier: {{requesterUserId}}, clique of the service creator: {{serviceParameters.cliqueId}}, id of the service (rowId): {{serviceParameters.serviceId}}, user uuid of the service creator: {{serviceParameters.createdByUuid}}, name of the service: {{serviceParameters.serviceName}}, name of the files created by the service: {{serviceParameters.fileNameWithoutExtension}}, what should the service do, if it gets triggered? possible options: write usbfile, upload file to sftp-server, send email: {{serviceParameters.action}}, if Action = email, send the service output to this email address: {{serviceParameters.emailAddress}}, hostname of the sftp-server, e.g. 127.0.0.1: {{serviceParameters.sftpOptionsInput.host}}, port of the sftp-server, e.g. 22: {{serviceParameters.sftpOptionsInput.host.port}}, user name for the sftp-server login: {{serviceParameters.sftpOptionsInput.host.port.username}}, password for the sftp-server login: {{serviceParameters.sftpOptionsInput.host.port.username.password}}, path on the sftp-server (store new files on this location): {{serviceParameters.sftpOptionsInput.host.port.username.password.destinationPath}}, how gets the service triggered? possible options: event (e.g. new ALARM), manual, cronjob, each x records (data log entries): {{serviceParameters.trigger}}, if Trigger = event, defines the trigger events, e.g. TriggerMessageTypes = \"ALARM | DISRUPTION\": \"{{serviceParameters.triggerMessageTypes}}\", if Trigger = data, we send a report after each TriggerDataIntervalCount new entries in data_dataLog: {{serviceParameters.triggerDataIntervalCount}}, if Trigger = cronjob, defines the cronjob execution time: {{serviceParameters.cronJobTimeStr}}, uuid of the device point which created this data point: {{serviceParameters.dataQueryParameters.devicePointName}}, uuid of the device point which created this data point: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid}}, name of the device, e.g. \"Wall-E 2\": {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid}}, type of the device, e.g. \"Wall-E\": {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName}}, number of the channel, e.g. 6 (6 = Temperature_Get, see enum ChannelValueCodes or emico c api): {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId}}, channel description, e.g. Get Temperature: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription}}, channel unit, e.g. DegC: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit}}, serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin}}, Consider only datalog elements with date less or equal DateUTCMax: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax}}, serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase}}, Alternative option to set DateUTCMin and DateUTCMax Only in combination with DateUTC: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec}}, Value should be greater equal ValueMin if we want to allow negatives values, we have to change the generator constaint \"if (valueMin lower 0.0) then\": {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin}}, Value should be lower equal ValueMax: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax}}, Desired Datatype: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType}}, should include virtual initial value if no DataPoint matches filter criteria the last DataPoint befor selected timeframe is given: {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType.virtualInitValue}}, Limits the number of returned data log entries (obtained by the query): {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType.virtualInitValue.limit}}, Offset for the query result (useful for pagination): {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType.virtualInitValue.limit.offset}}, Predicate for the seek pagination (row id): {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType.virtualInitValue.limit.offset.skipToken}}, Order the returned data log entries (by now there is only the \"Date\" column supported): {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType.virtualInitValue.limit.offset.skipToken.orderBy}}, Order of the returned data log entries (dependent to OrderBy) \"asc\" or \"desc\" allowed, default OrderBy column is \"date\": {{serviceParameters.dataQueryParameters.devicePointName.devicePointUuid.deviceUuid.deviceTypeName.dataPointId.dataPointDescription.dataPointUnit.dateUtcMin.dateUtcMax.dateUtcOffsetBase.dateOffsetSec.valueMin.valueMax.dataType.virtualInitValue.limit.offset.skipToken.orderBy.order}}",
        "DeleteDatalogsOlderThanBoundedAllCliquesInternal": "user identifier: {{requesterUserId}}, id of the service: {{serviceId}}",
        "DeleteService": "user identifier of the requester: {{requesterUserId}}, Delete only messages with CreatedTimestamp lower equal deleteOlderThan: {{deleteOlderThan}}, Limit the number of deleted messages: {{maxNumberOfDeletedMessages}}, true = delete only messages with DeletedBy != NULL: {{needsDeletedMark}}"
      },
      "SetDeviceMaintenanceMessageType": "Wartung durchgeführt von {{requesterUserId}}",
      "SystemRestartMessageTypes": "System neu gestartet.",
      "ThermalDisinfectionFailedDeviceMessageTypes": "Thermische Desinfektion fehlgeschlagen für Funktion \"{{functionName}}\" auf Gerät {{devicePointName}}, da {{thermalDisinfectionFailedDeviceReason}}. Zusatzinformationen: {{thermalDisinfectionFailedDeviceReasonParameter}}.",
      "ThermalDisinfectionFailedDeviceReason": {
        "AbortedByUser": "abgebrochen vom Nutzer",
        "DeviceFailed": "Gerät fehlgeschlagen",
        "DeviceStateIsNotOk": "Gerätezustand nicht in Ordnung",
        "Exception": "Exception",
        "UnkownDeviceStatus": "unbekannter Gerätezustand"
      },
      "ThermalDisinfectionFailedMessageTypes": "Thermische Desinfektion erfolgreich für Funktion \"{{functionName}}\" auf Gerät {{devicePointArrangementNames}} und Ventilen \"{{circulationValvesNames}}\" und DTE \"{{dteName}}\", da {{thermalDisinfectionFailedReason}}. Zusatzinformationen: \"{{thermalDisinfectionFailedReasonParameters}}\".",
      "ThermalDisinfectionFailedReason": {
        "Exception": "Exception",
        "SomeDevicesFailed": "einige Geräte sind fehlgeschlagen"
      },
      "ThermalDisinfectionResetDeviceFailedMessageTypes": "Thermische-Desinfektions-Funktion \"{{functionName}}\". Reset von Gerät {{devicePointName}} fehlgeschlagen, da {{thermalDisinfectionResetDeviceFailedReason}}. Zusatzinformationen: {{thermalDisinfectionResetDeviceFailedReasonParameter}}.",
      "ThermalDisinfectionResetDeviceFailedReason": {
        "Exception": "Exception"
      },
      "ThermalDisinfectionStartedMessageTypes": "Thermische Desinfektion gestartet für Funktion \"{{functionName}}\" mit den Geräten \"{{devicePointArrangementNames}}\" und Ventilen \"{{circulationValvesNames}}\" und DTE \"{{dteName}}\".",
      "ThermalDisinfectionSuccessfulMessageTypes": "Thermische Desinfektion erfolgreich für Funktion \"{{functionName}}\" mit Geräten \"{{devicePointArrangementNames}}\" und Ventilen \"{{circulationValvesNames}}\" und DTE \"{{dteName}}\".",
      "UpdateDeviceFailedMessageTypes": "Geräteupdate fehlgeschlagen für {{deviceName}} vom Typ {{deviceType}} mit Seriennummer {{serialNumber}}. Das Update ist fehlgeschlagen, da {{deviceUpdateFailedStatus}}.",
      "UpdateDeviceStartMessageTypes": "Geräteupdate gestartet für {{deviceName}} vom Typ {{deviceType}} mit Seriennummer {{serialNumber}}. Dieses Update hat die Software-Version {{deviceUpdateInfo.softwareVersion}} und Patch-Version {{deviceUpdateInfo.patchVersion}}. Die momentane Versionsnummer {{revisionNumberOld}} wird aktualisiert auf {{deviceUpdateInfo.canOpenInfo.revisionNumber}}.",
      "UpdateDeviceSuccessfulMessageTypes": "Geräte war erfolgreich für {{deviceName}} vom Typ {{deviceType}} mit Seriennummer {{serialNumber}}. Aktualisierung von {{revisionNumberOld}} auf {{revisionNumberNew}}.",
      "UserTableSvc": {
        "ChangePassword": "request user id: {{param.requesterUserId}}, param.loginName: {{param.loginName}}, param.password: {{param.password}}, param.authorityTemplateName: {{param.authorityTemplateName}}, param.firstName: {{param.firstName}}, param.lastName: {{param.lastName}}, param.email: {{param.email}}, param.majorId: {{param.majorId}}",
        "ChangeUserLockStatus": "Nutzer-ID \"{{requesterUserId}}\" hat Sperrstatus von \"{{userLoginName}}\" geändert zu \"{{lockFlag}}\".",
        "CreateClique": "param.reqeustUserId: {{param.reqeustUserId}}, param.userLoginName: {{param.userLoginName}}, param.newUserPassword: {{param.newUserPassword}}, param.useBeforeTimestamp: {{param.useBeforeTimestamp}}",
        "CreateUser": "param.requesterUserId: {{param.requesterUserId}}, param.userLoginName: {{param.userLoginName}}, param.newUserLoginName: {{param.newUserLoginName}}, param.firstName: {{param.firstName}}, param.lastName: {{param.lastName}}, param.email: {{param.email}}",
        "CreateUserWithCliqueId": "request user id: {{param.requesterUserId}}, param.loginName: {{param.loginName}}, param.password: {{param.password}}, param.authorityTemplateName: {{param.authorityTemplateName}}, param.firstName: {{param.firstName}}, param.lastName: {{param.lastName}}, param.email: {{param.email}}, param.cliqueId: {{param.cliqueId}}, param.majorId: {{param.majorId}}",
        "DeleteClique": "requesterUserId: {{requesterUserId}}, newLoginName: {{newLoginName}}, firstName: {{firstName}}, lastName: {{lastName}}, email: {{email}}",
        "DeleteUser": "user login name: {{loginName}}, user password: {{password}}",
        "Login": "Anmeldung von Nutzer \"{{loginName}}\".",
        "RemoveUserAuthorityTemplate": "requesterUserId: {{requesterUserId}}, userLoginName: {{userLoginName}}, authorityTemplateName: {{authorityTemplateName}}",
        "ResetPassword": "requesterUserId: {{requesterUserId}}, userLoginName: {{userLoginName}}",
        "ResetUserDisabledTimestamp": "requesterUserId: {{requesterUserId}}, userLoginName: {{userLoginName}}",
        "SetUserAuthorityTemplate": "requesterUserId: {{requesterUserId}}, cliqueName: {{cliqueName}}, cliqueDescription: {{cliqueDescription}}",
        "SetUserDisabledTimestamp": "requesterUserId: {{requesterUserId}}, cliqueName: {{cliqueName}}",
        "UpdateClique": "requesterUserId: {{requesterUserId}}, cliqueNameOld: {{cliqueNameOld}}, cliqueNameNew: {{cliqueNameNew}}, description: {{description}}",
        "UpdateUserAnyClique": "requesterUserId: {{requesterUserId}}, loginName: {{loginName}}, cliqueNameNew: {{cliqueNameNew}}",
        "UpdateUserAnyMetadata": "Requester User ID: {{requesterUserId}}, input.disabledTimestamp: {{input.disabledTimestamp}}, input.targetLoginName: {{input.targetLoginName}}",
        "UpdateUserOwnMetadata": "Requester User ID: {{requesterUserId}}, Target Login Name: {{targetLoginName}}"
      }
    },
    "SFTP_SECURITY_ERROR": {
      "ConnectionError": "Verbindungsfehler.",
      "EncryptionAlgorithmUnsafe": "Unsichere Verschlüsselungsmethode gewählt.",
      "FingerprintDoesNotMatch": "Fingerprint stimmt nicht überein.",
      "HmacAlgorithmUnsafe": "Insecure method \"HMAC\" selected.",
      "HostKeyAlgorithmUnsafe": "Unsichere Schlüssel-Methode auf Host.",
      "KeyExchangeAlgorithmUnsafe": "Unsicherer Schlüssel-Austausch-Methode gewählt.",
      "MissingFingerprint": "Fingerprint fehlt.",
      "MissingPrivateKey": "Privater Schlüssel fehlt."
    },
    "SMTP_SECURITY_ERROR": {
      "ConnectionError": "Verbindungsfehler",
      "SmtpUnsafe": "Unverschlüsselter SMTP-Zugang"
    }
  },
  "APP": {
    "DASHBOARD": "Überwachung",
    "DEVICES": "Geräte",
    "FUNCTIONS": "Funktionen",
    "GLOBAL_ERROR_MESSAGE_PLURAL": "Es befinden sich {{controllerCount}} Controller im Persistent-System-Failure-Modus.",
    "GLOBAL_ERROR_MESSAGE_SINGULAR": "Es befindet sich ein Controller im Persistent-System-Failure-Modus.",
    "GLOBAL_RESET_INSTRUCTIONS": "Es besteht somit keine Verbindung zu den angeschlossenen Geräten. Zum Zurücksetzen muss die Stromversorgung des Controllers getrennt werden.",
    "LOGOUT": "Abmelden",
    "LOGOUT_FAILED": "Abmeldung fehlgeschlagen",
    "MY_PROFILE": "Mein Profil",
    "NOTIFICATIONS": "Meldungen",
    "PROJECT": "Projekt",
    "PROTOCOLS": "Protokolle",
    "SERVICE": "Service",
    "STATUS_ERROR": "Fehler",
    "STATUS_OK": "OK",
    "STATUS_WARNING": "Warnungen",
    "SYSTEM": "System",
    "UNKNOWN_SESSION_STATE": "Session abgebrochen",
    "USERS": "Benutzer"
  },
  "DASHBOARD": {
    "COULD_NOT_DELETE_DASHBOARD": "Löschen fehlgeschlagen",
    "COULD_NOT_GET_DASHBOARDS": "Überwachungen konnten nicht abgefragt werden",
    "COULD_NOT_GET_DEVICES": "Geräteliste konnten nicht abgefragt werden",
    "COULD_NOT_INITIALIZE_DASHBOARDS": "Initialisierungsfehler",
    "COULD_NOT_REMOVE_BACKGROUND": "Hintergrund konnte nicht gelöscht werden",
    "COULD_NOT_SAVE_BACKGROUND": "Hintergrund konnte nicht gespeichert werden",
    "COULD_NOT_SAVE_DASHBOARD": "Überwachung konnte nicht angelegt werden",
    "COULD_NOT_SAVE_DASHBOARDS": "Speichern fehlgeschlagen",
    "CREATE_DASHBOARD": "Überwachung anlegen",
    "DESIGNATION": "Bezeichnung (z.B. Etage):",
    "DUPLICATE_NAME": "Name existiert bereits",
    "FORBIDDEN_CHAR_ERROR": "Enthält verbotenes Sonderzeichen",
    "MAX_LENGTH_ERROR": "Zu viele Zeichen",
    "MIN_LENGTH_ERROR": "Mindestens vier Zeichen",
    "REMOVE_PICTURE": "Bild entfernen",
    "TEMPERATURE": "Temperatur:"
  },
  "DATEPICKER": {
    "DATE_PLACE_HOLDER": "bitte wählen",
    "TODAY": "Heute"
  },
  "DATERANGEPICKER": {
    "APPLY_TEXT": "OK",
    "CANCEL_TEXT": "Abbrechen",
    "CUSTOM_RANGE": "benutzerdefinierter Bereich",
    "DAYS": "Tage",
    "END_LABEL": "Enddatum",
    "PLACE_HOLDER": "bitte wählen",
    "SELECTED_TEXT": "Ausgewählte Tage",
    "START_LABEL": "Startdatum"
  },
  "DATETIMERANGEPICKER": {
    "FROM": "Von",
    "TO": "Bis"
  },
  "DEVICES": {
    "ACTION_ASSIGN_TO_FUNCTION": "Einer Funktion zuweisen",
    "ACTION_DISCONNECT_DEVICEPOINT": "Von Gerätepunkt trennen",
    "ACTION_EDIT": "Bearbeiten",
    "ACTION_INFO_HEADER": "Mögliche Aktionen",
    "ACTION_LINK_DEVICEPOINT": "Gerätepunkt verknüpfen",
    "ACTION_SETUP_FUNCTIONS": "Eingerichtete Funktionen",
    "ASSIGN_DEVICE_TO_FUNCTION": "Gerät einer Funktion zuweisen",
    "ASSIGN_EXISTING_FUNCTION": "Bestehender Funktion zuweisen:",
    "BASIC_INFO_HEADER": "Basisdaten",
    "CHOOSE_FUNCTION": "Bitte wählen Sie eine Funktion",
    "CIRCULATION_FUNCTION_SELECTION_LABEL": "Zirkulationsfunktion",
    "COMMENT": "Bemerkung",
    "COMMENT_PLACEHOLDER": "z.B. Installationsort",
    "CONFIGURE_DEVICE": "Konfigurieren",
    "CONFIG_TAB": "Konfiguration",
    "CONTROLLER_DETAILS": "Controllerdetails",
    "CONTROLLER_FAILED_RESTART": "Der Controller konnte nicht neu gestartet werden.",
    "CONTROLLER_POINT_SELECTION_TITLE": "Controller-Punkt wählen",
    "CONTROLLER_RESET_ALERT": "Möchten Sie {{name}} wirklich neu starten?",
    "CONTROLLER_RESTARTED": "Controller neu gestartet.",
    "CONTROLLER_TYPE": "Controller-Typ",
    "COULD_NOT_ADD_TO_FUNCTION": "Hinzufügen zu Funktion fehlgeschlagen",
    "COULD_NOT_ASSIGN_TO_CONTROLLER_POINT": "Zuweisung zu Controller-Punkt fehlgeschlagen",
    "COULD_NOT_ASSIGN_TO_DEVICE_POINT": "Zuweisung zu Gerätepunkt fehlgeschlagen",
    "COULD_NOT_DISABLE_DEVICE": "Gerät konnte nicht deaktiviert werden",
    "COULD_NOT_ENABLE_DEVICE": "Gerät konnte nicht aktiviert werden",
    "COULD_NOT_GET_AVAILABLE_SENSORS": "Sensoren konnten nicht abgefragt werden",
    "COULD_NOT_GET_DISCOVERY_STATUS": "Lokalisierungsstatus konnte nicht abgefragt werden",
    "COULD_NOT_GET_FUNCTIONS": "Funktionen konnten nicht abgefragt werden",
    "COULD_NOT_GET_PARAMETER_VALUES": "Geräteparameter konnten nicht abgefragt werden",
    "COULD_NOT_GET_UPDATE_STATUS": "Update-Status konnte nicht abgefragt werden",
    "COULD_NOT_LOAD_DEVICE_DATA": "Gerätedaten konnten nicht geladen werden",
    "COULD_NOT_RECORD_MAINTENANCE": "Wartung konnte nicht gespeichert werden",
    "COULD_NOT_RETRIEVE_UFC_STATUS": "UFC-Status konnte nicht abgefragt werden",
    "COULD_NOT_SET_INTERVAL": "Intervall konnte nicht gespeichert werden",
    "COULD_NOT_START_DEVICE_SEARCH": "Lokalisierung konnte nicht gestartet werden",
    "COULD_NOT_UNLINK_CONTROLLER": "Zuweisung konnte nicht aufgehoben werden",
    "COULD_NOT_UNLINK_DEVICE": "Zuweisung konnte nicht aufgehoben werden",
    "COULD_NOT_UPDATE_DEVICE_CIRCULATION_FUNCTION": "Zirkulationsfunktion konnte nicht gespeichert werden",
    "COULD_NOT_UPDATE_DEVICE_CONFIG": "Gerätekonfiguration konnte nicht gespeichert werden",
    "CREATE_NEW_FUNCTION": "Neue Funktion anlegen",
    "CREATE_SENSOR": "Sensor anlegen",
    "CREATE_SENSOR_HINT": "Bitte erstellen Sie einen Sensor, der nachfolgend mit einem Sensor-Gerätepunkt verknüpft werden kann.",
    "DELETED_CONTROLLER": "Gelöschter Controller",
    "DEVICE_DETAILS": "Gerätedetails",
    "DEVICE_FAILED_RESTART": "Das Gerät konnte leider nicht zurückgesetzt werden.",
    "DEVICE_FIRMWARE_UPDATE": "Gerätefirmware-Update",
    "DEVICE_FUNCTIONS_OVERVIEW": "Übersicht der Funktionen des Geräts",
    "DEVICE_INSTALLATION_SUMMARY": "{{deviceTypeName}} \"{{deviceName}}\" wurde zugewiesen auf:",
    "DEVICE_NOT_TESTABLE": "Es gibt keine Testfunktion für das Gerät",
    "DEVICE_POINT_NAME": "Name",
    "DEVICE_RESET_ALERT": "Möchten Sie {{name}} wirklich zurücksetzen?",
    "DEVICE_RESTARTED": "Gerät wurde zurückgesetzt.",
    "DEVICE_TYPE": "Gerätetyp",
    "DEVICE_UNAVAILABLE": "Keine Verbindung zum Gerät.",
    "DTE_VARIANT": "DTE-Variante",
    "ENTER_NEW_IP_ALERT": "Bitte geben Sie eine neue IP-Adresse ein.",
    "ERROR_OCCURED": "Ein Fehler is aufgetreten.",
    "ERROR_STATUS": "FEHLER",
    "FACTORY_RESET": "Auf Werkseinstellungen zurücksetzen",
    "FIND_CONTROLLER": "Controller suchen",
    "FIRMWARE_UPDATE": {
      "CANNOT_EXTRACT_FILE": "Die Firmware-Datei {{firmwareFileName}} konnte nicht entpackt werden.",
      "DEVICE_NOT_FOUND": "Das ausgewählte Gerät wurde nicht gefunden",
      "FAILED": "Die Firmware-Datei konnte nicht übertragen werden.",
      "FILE_IS_MISSING": "Keine Signatur für die Firmware-Datei {{firmwareFileName}} bekannt. Vorgang aus Sicherheitsgründen abgebrochen.",
      "INVALID_FILE": "Die Datei {{firmwareFileName}} entspricht nicht dem erwarteten Namensschema.",
      "ONLY_TAR_FILES_ALLOWED": "Bei {{ firmwareFileName }} handelt es sich nicht um eine '.tar'-Datei.",
      "REMOTE_DEVICE_ALERT": "Firmware auf Remote-Controller updaten",
      "REMOTE_DEVICE_ALERT_MSG": "Zum Login für Remote-Controller {{ address }} weiterleiten? (Öffnet neues Fenster)",
      "SUCCESS": "Die Geräte-Firmware wurde aktualisiert."
    },
    "FUNCTION_TEST": {
      "ALERT": "Möchten Sie diese Funktion wirklich testen?",
      "COULD_NOT_CANCEL": "Gerätefunktionstest konnte nicht abgebrochen werden",
      "COULD_NOT_CONTINUE_STEP": "Gerätefunktionstestschritt {{name}} konnte nicht fortgesetzt werden",
      "COULD_NOT_RESTART": "Neustart von Gerätefunktionstest fehlgeschlagen",
      "COULD_NOT_RESTART_STEP": "Neustart von Schritt fehlgeschlagen",
      "COULD_NOT_RESTART_WITH_NAME": "Neustart von Gerätefunktionstest fehlgeschlagen (Ursprünglich gestartet von {{startedBy}})",
      "COULD_NOT_SKIP_STEP": "Schritt konnte nicht übersprungen werden",
      "COULD_NOT_START": "Gerätefunktionstest konnte nicht gestartet werden",
      "DEVICE_TYPE_NOT_SUPPORTED": "Gerätetype {{type}} nicht unterstützt",
      "ERROR": "Gerätefunktionstest war nicht erfolgreich.",
      "FAILED": "Gerätefunktionstest war nicht erfolgreich.",
      "FAIL_DIALOG": "Funktionstest nicht bestanden.",
      "INTERVAL": "Zeitintervall Funktionstest",
      "NO_FUNCTIONS_ASSIGNED": "Dem Gerät {{name}} sind keine Funktionen zugewiesen.",
      "PASSED": "Test war erfolgreich.",
      "REPORT": {
        "DTE": {
          "ABORTED_TEST": "Es ist kein Testergebnis für diesen Schritt vorhanden, da der Funktionstest abgebrochen wurde.",
          "DEVICE_NAME": "DTE-Name",
          "END_TIME": "Abgeschlossen",
          "IS_SKIPPED": "Übersprungen?",
          "NO_TEST_AVAILABLE": "Derzeit liegt kein DTE-Funktionstest vor. Sie können in der Gerätesektion einen neuen DTE-Funktionstest durchführen.",
          "OVERVIEW": "Übersicht",
          "REPORT_TITLE": "Report: DTE-Funktionstest",
          "RESULTS": "Testschritte",
          "RESULT_MESSAGES": "Ergebnisse",
          "START_TIME": "Startzeit",
          "TEST_ID": "Funktionstest-ID",
          "USER_NAME": "Nutzer"
        }
      },
      "RESTART_ALERT": "Möchten Sie den Test dieser Funktion neu starten?",
      "RESTART_ALERT_WITH_NAME": "Möchten Sie den Test dieser Funktion neu starten? (Ursprünglich gestartet von {{startedBy}})",
      "START": "Funktionstest starten",
      "STEP_RESTART_ALERT": "Möchten Sie den Testschritt {{name}} neu starten?",
      "SUCESS_DIALOG": "Funktionstest bestanden."
    },
    "FUNC_TEST": "Funktionstest",
    "HOURS": "Std",
    "INSTALLATION_SUCCESS_TITLE": "Gerät zugewiesen",
    "INTERFACE": "Interface",
    "IP_ADDRESS": "IP",
    "IP_CHANGE_FAILED": "Die IP konnte nicht geändert werden.",
    "IP_CHANGE_SUCCESSFUL": "Die IP wurde erfolgreich geändert: {{newIpInput}}.",
    "IS_NEW_MAINTENANCE_CARRIED_OUT": "Wurde gerade eine neue Wartung durchgeführt?",
    "LAST_MAINTENANCE": "Letzte Wartung:",
    "LOADING_DATA": "Daten werden geladen…",
    "LOCALIZATION_STARTED": "Lokalisierung wurde gestartet.",
    "LOCALIZATION_START_FAILED": "Die Lokalisierung konnte nicht gestartet werden.",
    "LOCATE_DEVICE": "Lokalisieren",
    "LOCATION": "Standort",
    "LOCATION_CONFIRMATION_QUESTION": "Ich bin mir sicher, dass {{deviceTypeName}} \"{{deviceName}}\" wirklich auf den gewählten Gerätepunkt installiert wurde. Ich verstehe, dass es ein schwerwiegendes Sicherheitsproblem darstellt, ein Gerät dieses Typs mit einem falschen Gerätepunkt zu verbinden, das zu gefährlichen Verletzungen führen kann.",
    "MAC_ADDRESS": "MAC",
    "MAINTENANCE_HISTORY": "Wartungsgeschichte",
    "MAINTENANCE_INTERVAL": "Wartungsintervall",
    "MAINTENANCE_TAB": "Wartung",
    "MORE_THAN_ONE_SESSION_OPENED_FOR_DTE": "Dieses Gerät wird derzeit von einer anderen Sitzung oder einem anderen Benutzer gesteuert. Das Konfigurationsfeld für diese aktiven Sitzungen wird deaktiviert, bis die andere Sitzung geschlossen wird",
    "NAME_ALREADY_ASSIGNED": "Name bereits vergeben",
    "NAME_OF_SENSOR": "Name des Sensors",
    "NEXT_MAINTENANCE": "Nächste Wartung:",
    "NO_FREE_PORTS": "Dieses Gerät hat keine freien Ports mehr für Sensoren.",
    "NO_FUNCTIONS_ASSIGNED": "Keine Funktionen zugewiesen",
    "NO_UNLINKED_CONTROLLER_POINT": "Es ist kein freier Controller-Punkt vorhanden.",
    "NO_UNLINKED_DEVICE_POINT": "Es ist kein freier Gerätepunkt dieses Typs vorhanden.",
    "OFFLINE_STATUS": "OFFLINE",
    "OK_STATUS": "OK",
    "PERFORM_MAINTENANCE": "Wartung durchgeführt",
    "PORT_TAKEN": "Sensor-Port bereits vergeben.",
    "RELOADING_CONFIGURATION": "Änderungen werden übernommen…",
    "RESET_PARAM_ALERT": "Möchten Sie die Parameter wirklich auf die Standardeinstellungen zurücksetzen?",
    "RESTART_CONTROLLER": "Neustart",
    "RESULT_TITLE": "Testergebnis",
    "REVERSE_SEARCH_DEVICES": "Gerät identifizieren",
    "SAVE_CHANGES_ALERT": "Möchten Sie die Änderungen wirklich speichern?",
    "SEARCH_PLACEHOLDER": "Suche",
    "SEARCH_SKIP_CONTROLLER": "Controller überspringen",
    "SEARCH_START": "Geräte suchen",
    "SEARCH_STATE_CONTROLLER_DONE": "Controllersuche ist abgeschlossen.",
    "SEARCH_STATE_CONTROLLER_ERROR": "Controllersuche fehlerhaft",
    "SEARCH_STATE_CONTROLLER_RUNNING": "Controllersuche läuft",
    "SEARCH_STATE_LSS_DONE": "Gerätesuche ist abgeschlossen.",
    "SEARCH_STATE_LSS_ERROR": "Fehler bei CAN-Gerätesucher",
    "SEARCH_STATE_LSS_RUNNING": "CAN-Geräte werden gesucht",
    "SEARCH_STOP": "Suche abbrechen",
    "SELECT_DEVICE_POINT": "Gerätepunkt wählen",
    "SELECT_UPDATE_FILE_ALERT": "Bitte wählen Sie die Update-Datei für den Typ {{deviceTypeName}} aus.",
    "SENSORS_LIST_AVAILABLE_MESSAGE": "Die folgenden Ports sind zum Anlegen von Sensoren verfügbar.",
    "SENSORS_TAB": "Sensoren",
    "SENSOR_NAME": "Sensorname",
    "SERIAL_NUMBER": "Seriennummer",
    "SOFTWARE_VERSION": "Software-Version",
    "START_CALIBRATION": "Kalibrierung starten",
    "START_REVERSE_SEARCH": "Geräte Identifizieren",
    "START_REVERSE_SEARCH_MESSAGE": "Bitte lösen Sie nun die Geräte aus, die Sie identifizieren möchten. Diese werden dann hier aufgelistet.",
    "STATUS_NOT_OK": "Status: Nicht OK",
    "SUCCESS_MESSAGE": "Erfolg!",
    "TYPE": "Typ",
    "UNALLOCATED": "Nicht zugewiesen",
    "UNASSIGNED_CONTROLLER": "Nicht zugewiesener Controller",
    "UNASSIGNED_DEVICE": "Nicht zugewiesenes Gerät",
    "UNKNOWN_STATUS": "Status unbekannt",
    "UNLINK_CONTROLLER_ALERT": "Möchten Sie die Verknüpfung dieses Controllers wirklich aufheben?",
    "UNLINK_DEVICE_ALERT": "Möchten Sie die Verknüpfung dieses Geräts wirklich aufheben?",
    "UPDATE_DEVICE_REPEAT": "Geräteupdate wiederholen",
    "UPDATE_FIRMWARE": "Firmware updaten",
    "UPDATE_LICENSE_FILE": "Lizenzdatei updaten",
    "UPLOAD": "Hochladen",
    "SEARCH_STATE_DONE": "Gerätesuche ist abgeschlossen."
  },
  "DROPDOWN": {
    "ACTION_FAILURE_TEMPLATE": "Anfrage fehlgeschlagen",
    "NO_RECORDS_TEMPLATE": "Keine Einträge gefunden"
  },
  "ERROR_MESSAGES": {
    "FUNCTION_TEST": {
      "COULDNT_DISPLAY_PROTOCOL": "Testprotokoll konnte nicht angezeigt werden. Bitte Fehlerdetails überprüfen."
    }
  },
  "FUNCTIONS": {
    "ACTION": "Aktionen",
    "ACTIVATE_TEMPERATURE": "Aktiviert",
    "ACTIVE": "Aktiv",
    "CHECKING_KEY_SWITCH": "Schlüsselschalter wird überprüft…",
    "CHECK_AVAILABILITY_OF_DEVICES": "Überprüfe Verfügbarkeit von Geräten…",
    "CHECK_IF_THERMAL_DISINFECTION_IS_RUNNING": "Prüfe, ob die thermische Desinfektion bereits läuft…",
    "CONFIRMATION_QUESTION": "Soll die thermische Desinfektion jetzt gestartet werden? Achtung, an folgenden Gerätepunkten besteht Verbrühungsgefahr!",
    "COULD_NOT_ABORT_THERMAL_DISINFECTION": "Thermische Desinfektion konnte nicht abgebrochen werden",
    "COULD_NOT_CLAIM_DTE_TEMPERATURE": "Bestätigung konnte nicht übermittelt werden",
    "COULD_NOT_DELETE_FUNCTION": "Funktion konnte nicht gelöscht werden",
    "COULD_NOT_ENABLE_FUNCTION": "Funktion konnte nicht aktiviert werden",
    "COULD_NOT_GET_CIRCULATION_TEMPERATURES": "Zirkulationstemperaturen konnten nicht abgefragt werden",
    "COULD_NOT_GET_STATE_OF_THERMAL_DISINFECTION": "Desinfektionsphase konnte nicht abgefragt werden",
    "COULD_NOT_INITIALIZE_DIALOG": "Dialog konnte nicht initialisiert werden",
    "COULD_NOT_START_THERMAL_DISINFECTION": "Thermische Desinfektion konnte nicht gestartet werden",
    "COUL_NOT_GET_COMPATIBLE_DEVICE_POINTS": "Kompatible Gerätepunkte konnten nicht ermittelt werden",
    "COUL_NOT_GET_FUNCTIONS": "Funktionen konnten nicht abgefragt werden",
    "DELETE_FUNCTION": "Funktion löschen",
    "DETAILS_HOUR_PLACEHOLDER": "Stunden",
    "DETAILS_SECTION_CALENDAR": "Spülen nach Kalender",
    "DETAILS_SECTION_CIRCULATION": "Zirkulation unt Temperatureinstellungen",
    "DETAILS_SECTION_INTERVAL": "Spülen nach Intervall",
    "DETAILS_SECTION_TEMPERATURE": "Spülen nach Temperatur",
    "DETAILS_STEP": "Details",
    "DEVICES_STEP": "Geräte",
    "EDIT_FUNCTION": "Funktion bearbeiten",
    "EDIT_FUNCTION_MODAL_TITLE": "Funktion bearbeiten",
    "ERROR_MESSAGES": {
      "CIRCLUATION_VALVE_CAN_ONLY_BE_ASSIGNED_ONCE": "Zirkulationsventil bereits einer Funktion zugewiesen",
      "FUNCTION_CREATION_FAILED": "Anlegen von Funktion fehlgeschlagen",
      "FUNCTION_UPDATE_FAILED": "Funktions-Aktualisierung fehlgeschlagen",
      "NAME_MIN_LENGTH_WARNING": "Mindestens 4 Zeichen",
      "NAME_NOT_UNIQUE": "Eine Funktion mit diesem Namen ist bereits vorhanden.",
      "UFC_STATUS_INVALID": "Ungültiger UFC-Status",
      "DEVICE_POINT_CAN_ONLY_BE_ASSIGNED_ONCE": "Device-Point bereits einer Funktion zugewiesen",
      "TEMPERATURE_LEVEL_VALIDATION_MESSAGE": "Temperatur muss zwischen 30° und 70° liegen",
      "TEMPERATURE_LEVEL_DEFAULT_MANDATORY": "Bitte zumindest den ersten Temperaturlevel angeben"
    },
    "EXECUTION_DONE_FEEDBACK": "Die Funktion \"{{name}}\" wurde gestartet.",
    "EXECUTION_FAILED_FEEDBACK": "Fehler! Die Funktion \"{{name}}\" konnte nicht gestartet werden.",
    "FUNCTION": "Funktion",
    "FUNCTION_DELETE_WARNING": "Soll die Funktion wirklich entfernt werden?",
    "FUNCTION_DESCRIPTIONS": {
      "CIRCULATION": "Eine Funktion zur Zirkulation von Wasser durch ein System. Benötigt mindestens eine DTE oder ein Zirkulationsventil.",
      "HYGIENE_FLUSH_CALENDAR": "Eine Hygienespülung, die nach Kalender ausgeführt wird.",
      "HYGIENE_FLUSH_INTERVAL": "Eine Hygienespülung, die in Intervallen ausgeführt wird.",
      "HYGIENE_FLUSH_USAGE": "Eine Hygienespülung, die ausgeführt wird, wenn ein Gerät für einen gegebenen Zeitraum nicht benutzt wird.",
      "THERMAL_DISINFECTION": "Thermische Desinfektionsspülung."
    },
    "FUNCTION_NAMES": {
      "CIRCULATION": "Zirkulation und Temperatureinstellung",
      "HYGIENE_FLUSH_CALENDAR": "Hygienespülung (Kalender)",
      "HYGIENE_FLUSH_INTERVAL": "Hygienespülung (Intervall)",
      "HYGIENE_FLUSH_USAGE": "Hygienespülung (Nutzung)",
      "THERMAL_DISINFECTION": "Thermische Desinfektion",
      "THERMAL_RINSE": "Thermische Desinfektion"
    },
    "FUNCTION_STEP": "Funktion",
    "GROUP_IS_BLOCKED_FOR_THERMAL_RINSING": "Gruppe wird zur thermischen Spülung abgesperrt…",
    "INTERVAL_START_TIME": "Zeitpunkt",
    "KEYSWITCH_IS_ALREADY_ACTIVATED": "Der Schlüsselschalter ist bereits betätigt. Bitte setzen Sie den Schlüsselschalter zurück und betätigen Sie ihn erneut, um die thermische Desinfektion zu starten.",
    "LABEL_CHECKBOX_PARALLEL_FLUSH": "Parallel spülen",
    "LABEL_DETAILS_NONE_USE_INTERVAL": "Nicht-Nutzungsintervall:",
    "LABEL_DETAILS_NO_RINSE_INTERVAL": "Nicht spülen von",
    "LABEL_DETAILS_OCLOCK": "Uhr",
    "LABEL_DETAILS_RINSE_TO": "bis",
    "LABEL_DEVICES_SELECT_CIRCULATION_DEVICE": "Wählen Sie Zirkulations-Geräte aus:",
    "LABEL_DEVICES_SELECT_DTE_DEVICE": "Wählen Sie ein DTE-Gerät aus:",
    "LABEL_DEVICES_SELECT_KEY_SWITCH_DEVICE": "Wählen Sie ein Key-Switch-Gerät aus:",
    "LABEL_DEVICES_SELECT_TEMPERATURE_SENSOR": "Wählen Sie einen Temperatursensor:",
    "LABEL_DTE": "DTE:",
    "LABEL_FLUSH_OPTION": "Spüloptionen:",
    "LABEL_FUNCTION": "Funktion:",
    "LABEL_GO_BACK": "Zurück",
    "LABEL_INTERVAL": "Intervall",
    "LABEL_INVALID_TIME": "Ungültiger Zeitpunkt",
    "LABEL_NAME": "Name:",
    "LABEL_OPEN_CIRCULATION_VALVE": "Zu öffnendes Zirkulationsventil:",
    "LABEL_SELECT_DEVICES": "Wählen Sie die Geräte aus, auf denen die Funktion laufen soll:",
    "LABEL_SELECT_DEVICES_OF_OTHER_FUNCTION": "Geräte aus einer anderen Funktion übernehmen:",
    "LABEL_SEQUENCE_TAPS": "Reihenfolge der Entnahmearmaturen:",
    "LABEL_TEMPERATURE_SENSOR": "Temperatursensor:",
    "LABEL_USE_CONNECTED_UFC": "UFC verwenden",
    "LAST_RUN_DATE": "Letzte Ausführung",
    "NAME": "Name",
    "NEW_BUTTON_TEXT": "Neue Funktion anlegen",
    "NEW_FUNCTION_MODAL_TITLE": "Neue Funktion anlegen",
    "NO_DEVICES_FOUND": "Keine kompatiblen Geräte gefunden",
    "NO_DEVICE_MALE": "Keiner",
    "NO_DEVICE_NEUTRAL": "Keines",
    "NO_FUNCTION_WARINING": "Keine kompatible Funktion vorhanden.",
    "NUMBER_OF_DEVICES": "Anzahl der Geräte",
    "PHW": "PWH",
    "PHW_C": "PWH-C",
    "POSSIBLE_ACTIONS": "Mögliche Aktionen",
    "PRESS_KEYSWITCH_TO_START_THERMAL_FLUSH": "Bitte betätigen Sie den Schlüsselschalter, um die thermische Desinfektion zu starten.",
    "REQUIRED_FIELD": "Erforderliches Feld",
    "SAVE_BUTTON": "Speichern",
    "SECTION_DETAILS_THERMAL_DISINFECTION": "Thermische Desinfektion",
    "SECTION_RINSE_AFTER_NO_USE": "Spülen nach Nicht-Nutzung",
    "SET_TEMPERATURE": "Temperatur wählen",
    "SHOULD_FUNCTION_BE_STARTED_NOW": "Soll \"{{functionName}}\" jetzt gestartet werden?",
    "START_FUNCION_MANUALLY": "Funktion manuell starten",
    "TEMPERATURE_LEVEL": "Temperature level",
    "TEMPERATURE_LEVEL_1": "Temperaturniveau 1",
    "TEMPERATURE_LEVEL_1_NOT_SET": "Sie haben auf der Vorseite noch kein Temperaturniveau eingegeben.",
    "TEMPERATURE_LEVEL_2": "Temperaturniveau 2",
    "TEMPERATURE_LEVEL_3": "Temperaturniveau 3",
    "TEMPERATURE_LEVEL_4": "Individuell",
    "TEMPERATURE_LEVEL_CHANGE_WARNING": "Temperaturabsenkung muss mit Ultra-Filtration erfolgen (Norm ABC). Temperaturabsenkung ohne Ultra-Filtration auf eigene Gefahr!",
    "TEMPERATURE_LEVEL_VALIDATION_MESSAGE": "Wert muss zwischen 30 and 70°C liegen",
    "TEMPERATURE_OF_HEATER_INDETERMINATE": "Die Temperatur des Trinkwassererwärmers kann nicht automatisch ermittelt werden. Für eine thermische Desinfektion sind mindestens 70°C erforderlich. Bitte bestägigen Sie, wenn diese Temperatur erreicht wurde.",
    "TEMPERATURE_SETTINGS_WARNING": "Die Temperatureinstellung ist nicht aktiv, da kein Sensor ausgewählt wurde.",
    "TEMPERATURE_WARMER_THAN": "Temperatur wärmer als",
    "THERMAL_RINSING_COMPLETED": "Die thermische Desinfektion wurde abgeschlossen.",
    "THERMAL_RINSING_COULD_NOT_COMPLETE": "Die thermische Desinfektion konnte nicht erfolgreich abgeschlossen werden.",
    "THERMAL_RINSING_IN_PROGRESS": "Die thermische Desinfektion wird durchgeführt…",
    "THERMAL_RINSING_IN_UNKNOWN_STATE": "Die thermische Desinfektion befindet sich in einer unbekannten Phase.",
    "WATER_IS_HEATED": "Wasser wird erwärmt…",
    "WATER_IS_HEATED_SECOND_ATTEMPT": "Wasser wird erwärmt (zweiter Versuch)…",
    "COULD_NOT_DISABLE_FUNCTION": "Funktion konnte nicht deaktiviert werden"
  },
  "GLOBAL": {
    "ACTION": "Aktionen",
    "ACTIVE": "Aktiv",
    "BACK_BUTTON_TEXT": "Zurück",
    "CANCEL_BUTTON_TEXT": "Abbrechen",
    "CLOSE_BUTTON_TEXT": "Schließen",
    "COMPANY_NAME": "Viega Deutschland",
    "COULD_NOT_INITIALIZE": "Initialisierung fehlgeschlagen",
    "COULD_NOT_LOAD_PRIVILEGES": "Nutzerberechtigungen konnten nicht geladen werden",
    "CREATE_BUTTON_TEXT": "Anlegen",
    "DATE": "Datum",
    "DESCRIPTION": "Beschreibung",
    "EDIT_BUTTON_TEXT": "Bearbeiten",
    "FALSE": "nein",
    "INACTIVE": "Inaktiv",
    "LOADING_DATA": "Daten werden geladen…",
    "MIN_LENGTH": "Mindestens {{num}} Zeichen",
    "NAME": "Name",
    "NEXT_BUTTON_TEXT": "Weiter",
    "NO_BUTTON_TEXT": "Nein",
    "OK_BUTTON_TEXT": "OK",
    "PRODUCT_NAME": "AquaVip Solutions",
    "QUIT_BUTTON_TEXT": "Beenden",
    "REQUIRED_FIELD_TEXT": "Erforderliches Feld",
    "SAVE_BUTTON_TEXT": "Änderungen speichern",
    "SKIP_BUTTON_TEXT": "Überspringen",
    "STATUS": "Status",
    "TRUE": "ja",
    "YES_BUTTON_TEXT": "Ja"
  },
  "GLOBAL_ERROR_HANDLER": {
    "HTTP_400": "Fehlerhafte Anfrage",
    "HTTP_401": "Sitzung abgelaufen",
    "HTTP_403": "Zugriff nicht erlaubt",
    "HTTP_404": "Nicht gefunden",
    "HTTP_504": "Controller nicht erreichbar",
    "UNKNOWN_ERROR": "Unbekannter Fehler"
  },
  "GRID": {
    "CLEAR_BUTTON": "Zurücksetzen",
    "EMPTY_RECORD": "Keine Daten vorhanden",
    "FILTER_BUTTON": "Filtern",
    "ITEM": "Eintrag",
    "ITEMS": "Einträge"
  },
  "LANGUAGE": {
    "GERMAN": "Deutsch"
  },
  "LOGIN": {
    "BUTTON_TEXT": "Anmelden",
    "CHANGE_PASSWORD_BUTTON": "Passwort setzen",
    "CHANGE_PASSWORD_TITLE": "Bitte wählen Sie ein neues Passwort.",
    "CLIENT_CERTIFICATE_STATUS": "Client-Zertifikat gültig",
    "CONFIRM_PASSWORD": "Wiederholung",
    "ERROR_MESSAGE": "Anmeldung fehlgeschlagen",
    "INVALID_NEW_PASSWORD": "Das neue Passwort ist das gleiche wie das alte. Bitte geben Sie ein neues Passwort ein.",
    "NEW_PASSWORD": "Neues Passwort",
    "OLD_PASSWORD": "Altes Passwort",
    "OLD_PASSWORD_IS_INCORRECT": "Das alte Passwort ist nicht korrekt.",
    "PASSWORD": "Passwort",
    "PASSWORDS_DO_NOT_MATCH": "Neues Passwort und Wiederholung stimmen nicht überein.",
    "PASSWORD_CHANGED": "Passwort aktualisiert",
    "PASSWORD_INSECURE": "Das Passwort erfüllt nicht die Bedingungen für ein sichers Passwort.",
    "UNKNOWN_ERROR": "Ein unbekannter Fehler ist aufgetreten.",
    "USERNAME": "Benutzername",
    "USER_LOCKED": "Benutzer ist gesperrt, wenden Sie sich an Ihren Administrator."
  },
  "NOTIFICATIONS": {
    "ACKNOWLEDGED_ON": "Quittiert am",
    "ACKNOWLEDGE_SUCCESS": "Meldung quittiert",
    "CANCEL": "Schließen",
    "CONFIRM": "Quittieren",
    "COULD_NOT_ACKNOWLEDGE": "Meldung konnte nicht quittiert werden",
    "COULD_NOT_FIX": "Meldung konnte nicht behoben werden",
    "DONE": "Erledigt",
    "ERROR_CODE": "Fehlercode",
    "EVENTS": "Ereignisse",
    "FIXED_ON": "Behoben am",
    "MESSAGE_DETAIL": "Meldungsdetails",
    "MESSAGE_SOURCE": "Meldungsquelle",
    "MESSAGE_TYPE": "Meldungstyp",
    "REPORTS": "Meldungen",
    "RESOLVE": "Beheben",
    "RESOLVE_SUCCESS": "Meldung behoben",
    "SEEN_ON": "Gesehen am"
  },
  "PAGER": {
    "ALL": "Alle",
    "CURRENT_PAGE_INFO": "{0} von {1} Seiten",
    "FIRST_PAGE_TOOLTIP": "Zur ersten Seite",
    "LAST_PAGE_TOOLTIP": "Zur letzten Seite",
    "NEXT_PAGER_TOOLTIP": "Zum nächsten Pager",
    "NEXT_PAGE_TOOLTIP": "Zur nächsten Seite",
    "PAGER_ALL_DROP_DOWN": "Einträge",
    "PAGER_DROP_DOWN": "Einträge pro Seite",
    "PREVIOUS_PAGER_TOOLTIP": "Zum vorherigen Pager",
    "PREVIOUS_PAGE_TOOLTIP": "Zurück zur letzten Seite",
    "TOTAL_ITEMS_INFO": "({0} Einträge)",
    "TOTAL_ITEM_INFO": "({0} Eintrag)"
  },
  "PROJECT": {
    "AREAS": "Bereiche",
    "ASSIGN_FUNCTION": "Funktion zuweisen",
    "ASSIGN_GLOBALLY_UNIQUE_NAME": "Bitte vergeben Sie einen global eindeutigen Namen für das Gerät:",
    "BASE_DATA": "Stammdaten",
    "BASIC_INFO": "Basisdaten",
    "BUILDINGS": "Gebäude",
    "CHANGE_PICTURE": "Bild ändern",
    "COMPANY": "Firma",
    "CONTROLLER_NAME_TAKEN": "Controller-Name bereits vergeben",
    "COULD_NOT_DELETE": "Eintrag konnte nicht gelöscht werden",
    "COULD_NOT_FACTORY_RESET": "Zurücksetzen fehlgeschlagen",
    "COULD_NOT_GET_CONTROLLER_INFO": "Controller-Informationen konnten nicht abgefragt werden",
    "COULD_NOT_GET_DEVICE_INFO": "Geräte-Informationen konnten nicht abgefragt werden",
    "COULD_NOT_GET_DEVICE_VALUES": "Gerätedaten konnten nicht abgefragt werden",
    "COULD_NOT_GET_PROJECT_SETTINGS": "Projekdaten konnten nicht abgefragt werden",
    "COULD_NOT_GET_PROJECT_STRUCTURE": "Projektstruktur konnte nicht abgefragt werden",
    "COULD_NOT_RESET": "Projekt konnte nicht zurückgesetzt werden",
    "COULD_NOT_SET_PROJECT_IMAGE": "Projektbild konnte nicht gespeichert werden",
    "COULD_NOT_SET_PROJECT_SETTINGS": "Projekteinstellungen konnten nicht gespeichert werden",
    "CREATE_AREA_TITLE": "Bereich anlegen",
    "CREATE_BUILDING_TITLE": "Gebäude anlegen",
    "CREATE_CONTROLLER_FAILED": "Controllerpunkt konnte nicht erstellt werden.",
    "CREATE_DEVICE_FAILED": "Gerätepunkt konnte nicht erstellt werden.",
    "CREATE_DEVICE_TITLE": "Gerät anlegen",
    "CREATE_ROOM_TITLE": "Raum anlegen",
    "CREATE_SEGMENT_TITLE": "Segment anlegen",
    "DEVICE_NAME_TAKEN": "Gerätename bereits vergeben",
    "DEVICE_POINT_CONFIG": "Gerätepunktkonfiguration",
    "DEVICE_TYPE": "Gerätetyp:",
    "DUPLICATE": "Duplizieren",
    "EDIT_AREA_TITLE": "Bereich bearbeiten",
    "EDIT_BUILDING_TITLE": "Gebäude bearbeiten",
    "EDIT_CONTROLLER_FAILED": "Controller-Punkt konnte nicht gespeichert werden",
    "EDIT_DEVICE_FAILED": "Gerätepunkt konnte nicht gespeichert werden",
    "EDIT_ROOM_TITLE": "Raum bearbeiten",
    "EDIT_SEGMENT_TITLE": "Segment bearbeiten",
    "EXPORT": "Exportieren",
    "EXPORT_CONFIG_FAILED": "Die Projektkonfiguration konnte nicht exportiert werden.",
    "FILE_NOT_SUPPORTED": "Das Dateiformat wird nicht unterstützt.",
    "FILE_SIZE_TOO_LARGE": "Die ausgewählte Datei ist zu groß, die Datei kann nicht hochgeladen werden.",
    "FILE_TAB": "Projektdatei",
    "FUNCTIONAL_OVERVIEW": "Funktionsübersicht",
    "IMPORT": "Importieren",
    "IMPORT_DATA_COMFIRMATION": "Der Import überschreibt das aktuelle Projekt und startet den Controller neu! Wollen Sie wirklich fortfahren?",
    "IMPORT_DATA_ERROR": "Fehler - Das Projekt konnte nicht importiert werden.",
    "IMPORT_DATA_SUCCESSFUL": "Das Projekt wurde erfolgreich importiert. Der Controller wird nun neu gestartet.",
    "IMPORT_MODAL_TITLE": "Warnung - Projekt importieren",
    "INSTALLATION": "Installation",
    "INVALID_ENTRY": "Ungültige Eintrag",
    "INVALID_IP_ADDRESS": "Ungültige IP-Adresse",
    "IP_ADDRESS": "IP-Adresse:",
    "LOCATION": "Standort",
    "MASTER_DATA": "Project Stammdaten",
    "NAME": "Name:",
    "NEW_AREA": "Neuer Bereich",
    "NEW_BUILDING": "Neues Gebäude",
    "NEW_DEVICE_POINT": "Neuer Gerätepunkt",
    "NEW_ROOM": "Neuer Raum",
    "NEW_SEGMENT": "Neues Segment",
    "PLACE": "Ort",
    "POST_CODE": "PLZ",
    "REMARK": "Bemerkung:",
    "REMOVE": "Entfernen",
    "REMOVE_DEVICE_ALERT": "Sind Sie sicher, dass {{deviceName}} entfernt werden soll?",
    "RESET": "Reset",
    "RESET_DATA_ALERT": "Sollen die Projektdaten wirklich zurückgesetzt werden?",
    "RESET_DEVICE": "Auf Werkseinstellungen zurücksetzen",
    "RESET_PARAMS_ALERT": "Möchten Sie die Parameter wirklich auf die Standardeinstellungen zurücksetzen?",
    "RESET_PARAMS_SUCCESSFUL": "Erfolg!",
    "RESPONSIBLE": "Verantwortlicher",
    "REVISION_NUMBER": "Revisionsnummer:",
    "ROAD": "Straße",
    "ROOMS": "Räume",
    "ROOT_NAME": "Projekt",
    "SEGMENTS": "Segmente",
    "SERIAL_NUMBER": "Seriennummer:",
    "STRUCTURE": "Projektstruktur",
    "TITLE": "Titel"
  },
  "PROTOCOLS": {
    "ADD_REPORTING_SERVICE": "Reporting-Service hinzufügen",
    "APRIL": "April",
    "AUGUST": "August",
    "CHOOSE_MEASUREMENT_FILTER": "Wählen Sie einen Messfilter",
    "COULD_NOT_CREATE_SERVICE": "Reporting-Service konnte nicht angelegt werden",
    "COULD_NOT_DELETE_REPORT_SERVICES": "Reporting-Service konnte nicht entfernt werden",
    "COULD_NOT_EDIT_SERVICE": "Reporting-Service konnte nicht angepasst werden",
    "COULD_NOT_GET_SERVICES": "Reporting-Services konnten nicht abgefragt werden",
    "COULD_NOT_INITIALIZE_PLOT_PAGE": "Messdaten (Graph) konnte nicht initialisert werden",
    "COULD_NOT_RUN_REPORT_SERVICES": "Reporting-Service konnte nicht ausgeführt werden",
    "DAILY": "täglich",
    "DECEMBER": "Dezember",
    "DEVICE_NAME": "Gerätename",
    "DOC_MANAGEMENT": "Vorlagenverwaltung",
    "EMAIL": "E-Mail",
    "EXPORT_DATA": "Daten exportieren",
    "EXPORT_SETTINGS": "Export-Einstellungen",
    "FEBRUARY": "Februar",
    "FILE_NAME": "Dateiname",
    "FILE_NAME_WITHOUT_EXT": "Dateiname ohne Endung",
    "FILTER_SELECTION": "Filterauswahl",
    "FILTER_TEMPLATE": "Beispielvorlage",
    "FRIDAY": "Freitag",
    "FTP": "FTP/SFTP",
    "FTP_FINGERPRINT": "Fingerprint",
    "FUNCTIONS": "Funktionen",
    "GET_FILTER": "Filtervorlagen",
    "INVALID_MODEL_STATE": "Das Feld bzw. die Felder \"{{fields}}\" sind fehlerhaft.",
    "JANUARY": "Januar",
    "JULY": "Juli",
    "JUNE": "Juni",
    "KEEP_OLD_FILTERS": "Bewahren Sie alte Filter auf",
    "LIVE": "Live",
    "MANUAL_EXECUTION": "manuelle Ausführung",
    "MARCH": "März",
    "MAY": "Mai",
    "MEASUREMENT_DATA": "Messdaten",
    "MEASUREMENT_DATA_GRAPH": "Messdaten (Graph)",
    "MEASURING_POINT": "Messpunkt",
    "MONDAY": "Montag",
    "MONTHLY": "monatlich",
    "NAME": "Name",
    "NON_ZERO_READING": "ja",
    "NOVEMBER": "November",
    "NO_FILTER": "-",
    "NO_UNIT": "ohne Einheit",
    "NUMBER_OF_DATA_ENTRIES": "Anzahl der Dateneinträge",
    "NUMBER_OF_EVENTS": "bei Ereignisanzahl",
    "OCTOBER": "Oktober",
    "ON_EVENT": "bei Ereignis",
    "OPERATING_SYSTEM": "Betriebssystem",
    "PERIOD": "Zeitraum",
    "PHYSICAL_UNIT_LEFT": "Physikalische Einheit (Y-Achse links)",
    "PHYSICAL_UNIT_RIGHT": "Physikalische Einheit (Y-Achse rechts)",
    "PLEASE_CHOOSE": "bitte wählen",
    "READING": "Messwert",
    "REMOVE_REPORT_ALEART": "Sind Sie sicher, dass der Reporting-Service {{serviceName}} entfernt werden soll?",
    "REPORTING_SERVICE": "Reporting-Service",
    "REPORT_CREATION_NOTIFICATION": "Dokument wird erzeugt. Dies kann einen Moment dauern.",
    "RESET_FILTER": "Filter zurücksetzen",
    "RUN_REPORT_ALEART": "Soll der Reporting-Service {{serviceName}} wirklich ausgeführt werden?",
    "SATURDAY": "Samstag",
    "SEPTEMBER": "September",
    "SERVER_PATH": "Serverpfad",
    "SFTP": "FTP/SFTP",
    "SUMMARY": "Zusammenfassung",
    "SUNDAY": "Sonntag",
    "THURSDAY": "Donnerstag",
    "TIME": "Zeitpunkt",
    "TUESDAY": "Dienstag",
    "USB_DRIVE": "USB-Laufwerk",
    "USER": "Benutzer",
    "USER_ACTIONS": "Benutzeraktionen",
    "WEDNESDAY": "Mittwoch",
    "WEEKLY": "wöchentlich",
    "WEEK_DAY": "Wochentag",
    "YEARLY": "jährlich",
    "ZERO_READING": "nein"
  },
  "SHARED": {
    "COULD_NOT_LOAD_FILTER_TEMPLATES": "Filter-Templates konnten nicht geladen werden",
    "COULD_NOT_SAVE_FILTER_TEMPLATES": "Filter-Templates konnten nicht gespeichert werden",
    "FILTER_TEMPLATES": "Filtervorlagen",
    "TEMPLATE_NAME_QUESTION": "Wie soll die Filtervorlage heißen?"
  },
  "SUPPORT": {
    "AUSTRIA": "Österreich",
    "CHOOSE_YOUR_COUNTRY": "Wählen Sie Ihr Land aus",
    "GERMANY": "Deutschland",
    "LICHTENSTEIN": "Liechtenstein",
    "SERVICE": "Service",
    "SWITZERLAND": "Schweiz",
    "TECHNICAL_SUPPORT": "Technische Beratung",
    "TECHNICAL_SUPPORT_SOFTWARE_SUPPORT": "Technische Beratung / Software-Hotline"
  },
  "SYSTEM": {
    "ACCESS_PASSWORD": "Zugang: Passwort",
    "ACCESS_USERNAME": "Zugang: Benutzername",
    "ACTIVATE_SUMMER_WINTER_CHANGEOVER": "Sommer-/ Winterzeitumstellung aktivieren",
    "ALTERNATE_DNS_SERVER": "Alternativer DNS-Server",
    "CANCEL_EDIT_SETTINGS": "Abbrechen",
    "CONTROLLER_OVERVIEW": "Controllerübersicht",
    "CONTROLLER_OVERVIEW_IP": "IP",
    "CONTROLLER_OVERVIEW_LAST_NOTIFICATION": "Letzte Meldung",
    "CONTROLLER_OVERVIEW_MAC": "MAC",
    "CONTROLLER_OVERVIEW_NAME": "Name",
    "CONTROLLER_OVERVIEW_STATUS": "Status",
    "CONTROLLER_SECTION": "Controller",
    "CONTROLLER_TIME": "Controller-Zeit (Angabe in Browserzeitzone)",
    "CONTROLLER_TIMEZONE": "Controller-Zeitzone",
    "DNS_SERVER": "DNS-Server",
    "DOMAIN": "Domain",
    "EDIT_SETTINGS": "Bearbeiten",
    "EMAIL_ADDRESS_SENDER": "E-Mail-Adresse (Absender)",
    "EMAIL_SECTION": "E-Mail",
    "ERROR": "Fehler",
    "HOSTNAME": "Hostname",
    "LANGUAGE_SECTION": "Sprache",
    "OFFLINE": "Offline",
    "ONLINE": "Online",
    "OUTGOING_MAIL_SERVER": "Postausgangsserver",
    "OUTGOING_PORT": "Postausgangs-Port",
    "REQUIRED_FIELD": "Erforderliches Feld",
    "SAVE_CHANGES": "Änderungen speichern",
    "SAVE_SYSTEM_SETINGS_FAIL_MESSAGE": "Speichern fehlgeschlagen. Prüfen Sie Ihre Eingaben und versuchen Sie es erneut.",
    "SWITCHED_OFF": "ausgeschaltet",
    "SWITCHED_ON": "eingeschaltet",
    "SYSTEM_LANGUAGE": "Systemsprache",
    "SYSTEM_SETTINGS": "Systemeinstellungen",
    "TIME_SECTION": "Zeit"
  },
  "TIMEZONES": {
    "GMT": "(GMT) Western Europe Time, London, Lisbon, Casablanca",
    "GMT+1": "(GMT +1:00) Brussels, Copenhagen, Madrid, Paris",
    "GMT+10": "(GMT +10:00) Eastern Australia, Guam, Vladivostok",
    "GMT+11": "(GMT +11:00) Magadan, Solomon Islands, New Caledonia",
    "GMT+12": "(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka",
    "GMT+2": "(GMT +2:00) Kaliningrad, South Africa",
    "GMT+3": "(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg",
    "GMT+3_5": "(GMT +3:30) Tehran",
    "GMT+4": "(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi",
    "GMT+4_5": "(GMT +4:30) Kabul",
    "GMT+5": "(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent",
    "GMT+5_5": "(GMT +5:30) Bombay, Calcutta, Madras, New Delhi",
    "GMT+5_75": "(GMT +5:45) Kathmandu",
    "GMT+6": "(GMT +6:00) Almaty, Dhaka, Colombo",
    "GMT+7": "(GMT +7:00) Bangkok, Hanoi, Jakarta",
    "GMT+8": "(GMT +8:00) Beijing, Perth, Singapore, Hong Kong",
    "GMT+9": "(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk",
    "GMT+9_5": "(GMT +9:30) Adelaide, Darwin",
    "GMT-1": "(GMT -1:00) Azores, Cape Verde Islands",
    "GMT-10": "(GMT -10:00) Hawaii",
    "GMT-11": "(GMT -11:00) Midway Island, Samoa",
    "GMT-12": "(GMT -12:00) Eniwetok, Kwajalein",
    "GMT-2": "(GMT -2:00) Mid-Atlantic",
    "GMT-3": "(GMT -3:00) Brazil, Buenos Aires, Georgetown",
    "GMT-3_5": "(GMT -3:30) Newfoundland",
    "GMT-4": "(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz",
    "GMT-5": "(GMT -5:00) Eastern Time (US & Canada), Bogota, Lima",
    "GMT-6": "(GMT -6:00) Central Time (US & Canada), Mexico City",
    "GMT-7": "(GMT -7:00) Mountain Time (US & Canada)",
    "GMT-8": "(GMT -8:00) Pacific Time (US & Canada)",
    "GMT-9": "(GMT -9:00) Alaska"
  },
  "USERS": {
    "ADMIN_ROLE": "Administrator",
    "CANNOT_DISABLE_USER": "Nutzer konnte nicht deaktiviert werden",
    "CANNOT_ENABLE_USER": "Nutzer konnte nicht aktiviert werden",
    "CANNOT_GET_USER_DATA": "Nutzerdaten konnten nicht abgefragt werden",
    "CANT_DELETE_SELF_ALERT": "{{loginName}} kann nicht gelöscht werden: Ein Nutzer darf sich nicht selbst löschen.",
    "COULD_NOT_GET_USER_DATA": "Nutzerdaten konnten nicht abgefragt werden",
    "COULD_NOT_SAVE_EDITS": "Änderungen konnten nicht gespeichert werden",
    "COULD_NOT_UPDATE_PASSWORD": "Passwort konnte nicht gespeichert werden",
    "CREATE_USER_ERROR": "{{newUserName}} kann nicht erstellt werden. Ein Fehler trat auf.",
    "CREATE_USER_SUCCESS": "Benutzer {{loginName}} wurde erfolgreich angelegt.",
    "CREATE_USER_TEXT": "Benutzer anlegen",
    "DELETE_USER_ALERT": "Sind Sie sicher, dass der Nutzer {{loginName}} entfernt werden soll?",
    "DELETE_USER_ERROR": "{{loginName}} kann nicht gelöscht werden. Ein Fehler trat auf.",
    "DISABLED": "Deaktiviert",
    "EDIT_USER": "Benutzer bearbeiten",
    "EMAIL": "E-Mail",
    "EMAIL_EXISTS": "Ein Benutzer mit dieser E-Mail-Adresse existiert bereits.",
    "EMAIL_PLACE_HOLDER": "maxmustermann@twms.de",
    "ENABLED": "Aktiviert",
    "FIRSTNAME": "Vorname",
    "FIRSTNAME_PLACE_HOLDER": "Max",
    "GROUP": "Gruppe",
    "GUEST_ROLE": "Gast",
    "INSECURE_PASSWORD_TEXT": "Passwort zu unsicher*",
    "INVALID_EMAIL_TEXT": "Keine gültige E-Mail",
    "INVALID_FIELD_NO_SPACES": "Keine Leerzeichen zugelassen",
    "INVALID_NEW_PASSWORD": "Wiederverwendetes Passwort erkannt. Bitte geben Sie ein anderes Passwort ein.",
    "IS_LOCKED": "ist gesperrt",
    "IS_NOT_LOCKED": "ist nicht gesperrt",
    "LASTNAME": "Nachname",
    "LASTNAME_PLACE_HOLDER": "Mustermann",
    "LAST_LOGIN": "Letzte Anmeldung",
    "LOCK_SECTION_LABEL": "Nutzer sperren",
    "LOGINNAME": "Benutzer",
    "PASSWORDS_NOT_EQUAL": "Keine Übereinstimmung",
    "PASSWORD_CANNOT_BE_EMPTY": "Passwort kann nicht leer sein.",
    "PASSWORD_CONFIRM_MESSAGE": "Bitte bestätigen Sie die Passwortänderung mit Ihrem alten Passwort.",
    "PASSWORD_NOT_UPDATED": "Passwort wurde nicht aktualisiert!",
    "PASSWORD_SUMMARY": "Mindestens 6 Zeichen - mindestens ein Kleinbuchstabe, ein Sonderzeichen und eine Ziffer",
    "PROFILE_CLOSE": "Schließen",
    "PROFILE_EMAIL": "E-Mail:",
    "PROFILE_FIRSTNAME": "Vorname:",
    "PROFILE_INVALID_EMAIL": "Keine gültige E-Mail",
    "PROFILE_LASTNAME": "Nachname:",
    "PROFILE_MODAL_TITLE": "Benutzer bearbeiten",
    "PROFILE_PASSWORD": "Passwort:",
    "PROFILE_PASSWORD_INSECURE": "Passwort zu unsicher*",
    "PROFILE_PASSWORD_MISMATCH": "Keine Übereinstimmung",
    "PROFILE_PASSWORD_REPEAT": "Passwort wiederholen:",
    "PROFILE_REQUIRED_FIELD": "Erforderliches Feld",
    "PROFILE_REQUIREMENTS_MESSAGE": "*Mindestens 6 Zeichen - mindestens ein Kleinbuchstabe, ein Sonderzeichen und eine Ziffer",
    "PROFILE_SAVE_CHANGES": "Änderungen speichern",
    "PROFILE_USERNAME": "Benutzername:",
    "SELF_EDIT_TEXT": "Ihre eigenen Angaben können Sie nur unter 'mein Profil' verändern.",
    "STATUS": "Status",
    "USERNAME_PLACE_HOLDER": "maxmustermann",
    "USER_ALREADY_EXISTS": "Der Benutzer {{newUserName}} existiert bereits.",
    "USER_DELETED_ALERT": "Benutzer {{loginName}} wurde erfolgreich gelöscht.",
    "USER_GROUP": "Benutzergruppe",
    "USER_INFO_NOT_UPDATED": "Benutzerinfo wurde nicht aktualisiert!",
    "USER_ROLE": "Benutzer",
    "USER_ROLE_NOT_UPDATED": "Benutzerinfo wurden nicht aktualisiert!",
    "VERIFY_PASSWORD_MESSAGE": "Bitte autorisieren Sie sich mit Ihrem Passwort:",
    "WRONG_ORIGINAL_PASSWORD": "Das eingegebene Passwort ist falsch."
  },
  "WEEKDAY": {
    "FRIDAY_SHORT": "Fr",
    "MONDAY_SHORT": "Mo",
    "SATURDAY_SHORT": "Sa",
    "SUNDAY_SHORT": "So",
    "THURSDAY_SHORT": "Do",
    "TUESDAY_SHORT": "Di",
    "WEDNESDAY_SHORT": "Mi"
  },
  "WEEKTIME_PLANNER": {
    "ACTIVATE": "Aktiviert",
    "RINSE_TIME_1": "Spülzeitpunkt 1",
    "RINSE_TIME_2": "Spülzeitpunkt 2"
  },
  "_META": {
    "LOCALE": "de",
    "VERSION": "1.16.7-rc.2"
  }
}
